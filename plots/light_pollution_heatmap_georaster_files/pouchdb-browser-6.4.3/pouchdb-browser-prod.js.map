{"version":3,"sources":["webpack://PouchDB/webpack/bootstrap","webpack://PouchDB/./node_modules/uuid/lib/bytesToUuid.js","webpack://PouchDB/./node_modules/uuid/lib/rng-browser.js","webpack://PouchDB/./node_modules/immediate/lib/browser.js","webpack://PouchDB/(webpack)/buildin/global.js","webpack://PouchDB/./node_modules/vuvuzela/index.js","webpack://PouchDB/./node_modules/spark-md5/spark-md5.js","webpack://PouchDB/./node_modules/pouchdb-browser/node_modules/ms/index.js","webpack://PouchDB/./node_modules/pouchdb-browser/node_modules/debug/src/debug.js","webpack://PouchDB/./node_modules/process/browser.js","webpack://PouchDB/./node_modules/pouchdb-browser/node_modules/debug/src/browser.js","webpack://PouchDB/./node_modules/uuid/v4.js","webpack://PouchDB/./node_modules/uuid/v1.js","webpack://PouchDB/./node_modules/uuid/index.js","webpack://PouchDB/./node_modules/inherits/inherits_browser.js","webpack://PouchDB/./node_modules/events/events.js","webpack://PouchDB/./node_modules/argsarray/index.js","webpack://PouchDB/./node_modules/lie/lib/browser.js","webpack://PouchDB/./node_modules/pouchdb-browser/lib/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","byteToHex","toString","substr","buf","offset","bth","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rnds","Array","Math","random","scheduleDrain","draining","Mutation","global","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","length","task","push","g","this","Function","eval","e","window","pop","obj","stack","metaStack","lastMetaElement","lastElementIndex","index","isArray","stringify","input","next","val","arrayPrefix","keys","k","key","objPrefix","res","prefix","JSON","parse","str","collationIndex","parsedNum","numChar","parsedString","lastCh","numConsecutiveSlashes","ch","arrayElement","objElement","test","parseFloat","Error","undefined","hex_chr","md5cycle","x","a","b","md5blk","md5blks","charCodeAt","md5blk_array","md51","tail","tmp","lo","hi","state","substring","match","parseInt","rhex","j","hex","join","toUtf8","unescape","encodeURIComponent","hexToBinaryString","bytes","String","fromCharCode","apply","SparkMD5","reset","ArrayBuffer","slice","clamp","max","min","from","to","num","target","targetArray","sourceArray","byteLength","begin","end","set","append","appendBinary","contents","_buff","_length","_hash","raw","ret","buff","_finish","getState","hash","setState","destroy","hashBinary","content","arr","first","second","returnUInt8Array","result","buffer","subarray","utf8Str2ArrayBuffer","md51_array","factory","h","y","plural","ms","floor","ceil","options","type","exec","toLowerCase","isNaN","long","round","fmtShort","createDebug","namespace","prevTime","debug","enabled","self","curr","Date","diff","prev","args","arguments","coerce","unshift","replace","format","formatter","formatters","splice","formatArgs","log","console","useColors","color","colors","abs","selectColor","init","instances","indexOf","message","disable","enable","namespaces","save","names","skips","split","RegExp","instance","humanize","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","load","storage","DEBUG","lastC","removeItem","navigator","userAgent","style","WebkitAppearance","firebug","exception","table","$1","chrome","local","localStorage","localstorage","v","err","rng","bytesToUuid","ii","_nodeId","_clockseq","_lastMSecs","_lastNSecs","node","clockseq","seedBytes","msecs","getTime","nsecs","dt","tl","tmh","v1","v4","uuid","create","ctor","superCtor","super_","constructor","writable","TempCtor","EventEmitter","_events","_maxListeners","isFunction","arg","isObject","isUndefined","defaultMaxListeners","setMaxListeners","TypeError","er","handler","error","context","listener","newListener","warned","trace","fired","list","position","listenerCount","evlistener","emitter","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","reject","resolve","getThen","then","thenable","onError","onSuccess","tryCatch","status","out","reason","all","iterable","values","resolved","allResolver","outValue","race","response","_interopDefault","ex","lie","getArguments","events","inherits","uuidV4","Md5","vuvuzela","PouchPromise","cloneBinaryObject","cloneArrayBuffer","size","webkitSlice","ExportedSet","ExportedMap","funcToString","objectCtorString","clone","newObject","toISOString","Blob","isBinaryObject","proto","getPrototypeOf","Ctor","isPlainObject","toPromise","usedCB","fulfill","resp","callback","mesg","adapterFun","_closed","_destroyed","logArgs","origCallback","responseArgs","logApiCall","taskqueue","isReady","addTask","failed","mangle","unmangle","Map$1","_store","Set$1","add","pick","prop","mangled","has","delete","forEach","cb","Symbol","Map","Set","getOwnPropertyDescriptor","species","supportsMapAndSet","hasLocal","MAX_NUM_CONCURRENT_REQUESTS","identityFunction","formatResultForOpenRevsGet","ok","bulkGet","db","opts","requests","docs","requestsById","request","id","numDocs","numDone","perDocResults","checkDone","results","info","allRequests","nextBatch","upTo","batch","docId","docIdx","docRequests","docOpts","open_revs","map","rev","filter","formatResult","param","processBatch","isChromeApp","setItem","getItem","hasLocalStorage","Changes","_listeners","onChanged","db_name","dbName","newValue","addEventListener","attachEvent","guardedConsole","method","defaultBackOff","maxTimeout","randomNumber","explainError","inprogress","eventFunction","changesOpts","changes","seq","since","cancelled","onChange","notifyLocalWindows","notify","$inject_Object_assign","assign","nextSource","nextKey","PouchError","MISSING_BULK_DOCS","MISSING_DOC","REV_CONFLICT","INVALID_ID","MISSING_ID","RESERVED_ID","UNKNOWN_ERROR","BAD_ARG","QUERY_PARSE_ERROR","DOC_VALIDATION","BAD_REQUEST","NOT_AN_OBJECT","IDB_ERROR","WSQ_ERROR","INVALID_REV","MISSING_STUB","createError","CustomPouchError","generateErrorFromResponse","filterChange","req","hasFilter","query","query_params","change","doc","filterReturn","msg","tryFilter","include_docs","attachments","att","_attachments","stub","flatten","arrs","invalidIdError","isRemote","_remote","parseDesignDocFunctionName","parts","normalizeDesignDocFunctionName","normalized","qName","qParser","parser","parseUri","uri","encoded","decodeURIComponent","$0","$2","scopeEval","source","scope","upsert","diffFun","docRev","_rev","newDoc","updated","_id","put","tryAndPut","winningRev","metadata","winningId","winningPos","winningDeleted","toVisit","rev_tree","tree","ids","branches","pos","deleted","traverseRevTree","revs","newCtx","ctx","sortByPos","collectLeaves","leaves","isLeaf","acc","sort","reverse","collectConflicts","win","conflicts","leaf","compactTree","revHash","rootToLeaf","paths","history","sortByPos$1","insertSorted","item","comparator","idx","mid","low","high","binarySearch","pathToTree","path","numStemmed","root","currentLeaf","compareTree","mergeTree","in_tree1","in_tree2","tree1","tree2","merged","doMerge","dontExpand","restree","branch","t1","t2","candidateParents","trees","parent","parentIdx","elements","elementsLen","el","merge","depth","newTree","stemmed","stemmedRevs","stem","getTrees","isDeleted","isLocalId","latest","historyNode","Changes$2","complete","ee","onDestroy","cancel","pending","lastSeq","isCancelled","tryCatchInChangeListener","validateChanges","processChange","changeList","_conflicts","compare","left","right","yankError","compareByIdThenRev","idCompare","_revisions","start","AbstractPouchDB","TaskQueue$1","PouchDB","__opts","auto_compaction","backend","adapter","adapters","preferredAdapters","adapterName","use_prefix","parseAdapter","_adapter","valid","fail","onDestroyed","from_constructor","onClosed","prepareForDestruction","ready","_changesFilterPlugin","validate","doChanges","continuous","live","normalize","shouldFilter","descending","limit","newPromise","_changes","update_seq","post","bulkDocs","_putLocal","_deleted","_removeLocal","oldRevId","newRevNum","newRevId","putDoc","_put","new_edits","force","putAttachment","attachmentId","rev$$1","blob","api","createAttachment","prevrevpos","content_type","revpos","removeAttachment","remove","docOrId","optsOrRev","was_delete","revsDiff","count","missing","addToMissing","revId","_getRevisionTree","missingForId","processDoc","missingObj","compactDocument","maxHeight","revTree","height","edges","prnt","edge","computeHeight","candidates","_doCompaction","compact","_compactionQueue","doNextCompaction","catch","last_seq","_compact","shift","return_docs","promises","row","_getLocal","finishOpenRevs","binary","existing","_get","revs_info","splittedRev","revNo","currentPath","hashIndex","indexOfRev","howMany","_revs_info","_getAttachment","getAttachment","allDocs","skip","start_key","startkey","end_key","endkey","incompatibleOpt","allDocsKeysParse","_allDocs","close","_close","_info","_type","attachmentError","charAt","attachmentNameError","atts","cleanDocs","_bulkDocs","registerDependentDatabase","dependentDb","depDB","dependentDbs","usePrefix","destroyDb","_destroy","localDoc","deletedMap","trueName","execute","eventEmitter","Pouch","destructListeners","_destructionListeners","dbList","setUpEventEmitter","addToPreferredAdapters","plugin","__defaults","defaults","defaultOpts","PouchAlt","getFieldFromDoc","parsedField","parseField","fieldName","fields","current","combinationFields","isCombinationalField","field","getKey","mergeAndedSelectors","selectors","selector","matcher","$eq","fieldMatchers","operator","$gte","$gt","mergeGtGte","$lte","$lt","mergeLtLte","$ne","mergeNe","mergeEq","MIN_MAGNITUDE","MAGNITUDE_DIGITS","SEP","collate","normalizeKey","ai","bi","stringCollate","arrayCollate","ak","bk","objectCollate","Infinity","origKey","toJSON","indexify","expFormat","toExponential","magnitude","neg","magString","padWith","upToLength","padding","targetLength","pad","factor","factorStr","toFixed","numToIndexableString","toIndexableString","objKey","parseNumber","originalIdx","numAsString","magAsString","filterInMemoryFields","rows","requestDef","inMemoryFields","rowFilter","fieldSorter","getFieldValuesAsArray","sorting","aRow","bRow","collation","createFieldSorter","every","docFieldValue","some","orMatchers","find","matchCominationalSelector","matchSelector","userOperator","userValue","matchers","fieldExists","fieldIsNotUndefined","arrayContainsValue","$elemMatch","$allMatch","$exists","$mod","divisor","mod","modField","neValue","$in","$nin","$size","arraySize","$all","arrayContainsAllValues","$regex","regexMatch","$type","typeMatch","matchesSelector","rowsMatched","wasAnded","orOrNor","subSelector","massageSelector","filterName","view","changesHandler","doc_ids","viewName","ddoc","mapFun","views","filterFun","filters","toObject","reduce","logs","logId","reservedWords","dataWords","parseRevisionInfo","parseDoc","newEdits","nRevNum","revInfo","_rev_tree","revisions","revisionIds","makeRevTreeFromRevisions","specialKey","thisAtob","atob","thisBtoa","btoa","createBlob","properties","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","getBlob","binStringToBluffer","binString","bin","binaryStringToArrayBuffer","b64ToBluffer","b64","arrayBufferToBinaryString","readAsBinaryString","FileReader","FileReaderSync","readAsArrayBuffer","reader","hasBinaryString","onloadend","blobToBinaryString","blobOrBuffer","blobToBase64","base64","setImmediateShim","MD5_CHUNK_SIZE","appendBlob","sliceBlob","arrayBuffer","appendString","string","binaryMd5","inputIsString","chunkSize","chunks","currentChunk","loadNextChunk","done","rawToBase64","preprocessString","blobType","asBinary","parseBase64","digest","preprocessAttachment","md5","preprocessBlob","preprocessAttachments","docInfos","overallErr","docv","docInfo","recv","processedAttachment","updateDoc","revLimit","writeDoc","splitRev","targetPos","targetId","revExists","previousWinningRev","previouslyDeleted","isRoot","newRev","rev_map","winningRev$$1","winningRevIsDeleted","delta","processDocs","fetchedDocs","tx","overallCallback","idsToDocs","docsDone","docsToDo","checkAllDocsDone","currentDoc","resultsIdx","docWritten","nextDoc","rootIsMissing","insertDoc","ADAPTER_VERSION","DOC_STORE","BY_SEQ_STORE","ATTACH_STORE","ATTACH_AND_SEQ_STORE","META_STORE","LOCAL_STORE","DETECT_BLOB_SUPPORT_STORE","safeJsonParse","safeJsonStringify","json","idbError","evt","encodeMetadata","deletedOrLocal","decodeMetadata","storedObject","decodeDoc","_doc_id_rev","lastIndexOf","readBlobData","body","asBlob","fetchAttachmentsIfNecessary","txn","attObj","objectStore","onsuccess","fetchAttachment","postProcessAttachments","attNames","compactRevs","possiblyOrphanedDigests","seqStore","attStore","attAndSeqStore","countReq","IDBKeyRange","bound","deleteOrphanedAttachments","openCursor","only","event","cursor","digestSeq","primaryKey","continue","openTransactionSafely","idb","stores","mode","transaction","changesHandler$$1","idbBulkDocs","dbOpts","docStore","bySeqStore","attachStore","attachAndSeqStore","metaStore","docInfoError","metaDoc","allDocsProcessed","docCountDelta","preconditionErrored","_meta","blobSupport","onAllDocsProcessed","updateDocCountIfReady","docCount","newRevIsDeleted","isUpdate","collectResults","finishDoc","attachmentSaved","newAtt","putReq","saveAttachment","writeAttachments","afterPutDoc","revsToDelete","metadataToStore","afterPutMetadata","attsAdded","attsToAdd","onerror","preventDefault","stopPropagation","insertAttachmentMappings","txnResult","onabort","ontimeout","oncomplete","finish","digests","filename","verifyAttachment","attErr","verifyAttachments","numFetched","revs_limit","readMetadata","fetchExistingDocs","startTransaction","runBatchedCursor","keyRange","batchSize","onBatch","keysBatch","valuesBatch","pseudoCursor","onGetAll","onGetAllKeys","onCursor","getAll","getAllKeys","newKeyRange","lastKey","upper","upperOpen","code","lowerBound","idbAllDocs","keyRangeError","inclusiveEnd","inclusive_end","upperBound","createKeyRange","onResultsReady","updateSeq","docIdRevIndex","allDocsInner","fetchDocAsynchronously","batchValues","batchValue","batchKeys","returnVal","total_rows","maxKey","getMaxUpdateSeq","allDocsKeys","running","applyNext","docIds","returnDocs","numResults","docIdsToMetadata","onGetMetadata","docIdRev","objectStores","winningDocs","metadatas","fetchWinningDocAndMetadata","winningDoc","processMetadataAndWinningDoc","onBatchDone","filtered","blobSupportPromise","cachedDBs","openReqList","IdbPouch","action","tryCode","enqueueTask","thisCallback","addDeletedOrLocalIndex","createIndex","unique","migrateLocalStore","localStore","range","seqCursor","migrateAttsAndSeqs","digestMap","migrateMetadata","metadataSeq","decodeMetadataCompat","onGetMetadataSeq","instanceId","reqOpts","attachId","attachment","blobData","doc_count","idb_attachment_format","oldRev","oStore","oldDoc","openReq","indexedDB","deleteDatabase","cached","open","tryStorageOption","onupgradeneeded","oldVersion","createObjectStore","keyPath","autoIncrement","createSchema","currentTarget","createLocalStoreSchema","addAttachAndSeqStore","migrations","migration","onversionchange","storedMetaDoc","completeSetup","storeMetaDocIfReady","instanceKey","countDocs","blob$$1","matchedChrome","matchedEdge","checkBlobSupport","hexToInt","charCode","parseHexString","encoding","escape","decodeUtf8","parseHexUtf8","parseHexUtf16","quote","isSafari","openDatabase","platform","hasFetch","fetch","ADAPTER_VERSION$1","DOC_STORE$1","BY_SEQ_STORE$1","ATTACH_STORE$1","LOCAL_STORE$1","META_STORE$1","ATTACH_AND_SEQ_STORE$1","stringifyDoc","unstringifyDoc","qMarks","select","joiner","where","orderBy","compactRevs$1","seqs","sql","executeSql","digestsToCheck","nonOrphanedDigests","deleteOrphans","websqlError","errorNameMatch","errorReason","websqlBulkDocs","websqlChanges","docInfoErrors","_name","cnt","deletedInt","sqlArgs","insertId","dataWritten","fetchSql","attachmentErr","revsToCompact","metadataStr","params","websqlProcessDocs","cachedDatabases","fetchAttachmentsIfNecessary$1","attOpts","_","POUCH_VERSION","BY_SEQ_STORE_DELETED_INDEX_SQL","BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL","DOC_STORE_WINNINGSEQ_INDEX_SQL","ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL","ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL","DOC_STORE_AND_BY_SEQ_JOINER","SELECT_DOCS","WebSqlPouch","getSize","idRequests","openDBResult","cachedResult","websql","description","openDatabaseWithOpts","openDBSafely","openDB","dbCreated","runMigration2","runMigration3","doNext","runMigration4","updateRows","doc_id_rev","doc_id","runMigration5","pageSize","nextPage","digestSeqs","digestSeqPairs","pair","attachAndRev","runMigration6","runMigration7","onGetInstanceId","idCallback","onGetVersion","dbVersion","meta","attach","initSeq","initSeqArgs","tasks","dbid","nextMigration","getMaxSeq","readTransaction","checkEncoding","db_version","fetchVersion","theSeq","theDocCount","websql_encoding","latest$$1","latestRev","totalRows","criteria","destinctKeys","bindingStr","selectStmt","reportChange","maxSeq","fetchChanges","escaped","putLocal","rowsAffected","removeLocal","store","isValidWebSQL","hasLS","localStorageKey","openedTestDB","canOpenTestDB","openDB$2","WebSQLPouch","_opts","fetchRequest","wrappedPromise","timer","headers","Headers","fetchOptions","credentials","processData","wrappedFetch","url","fetchResponse","statusCode","text","abort","hasXhr","XMLHttpRequest","testXhr","ajax","xhr","timedout","timeoutReq","cleanUp","onprogress","upload","withCredentials","Accept","responseType","setRequestHeader","readyState","getResponseHeader","responseText","send","xhRequest","ajaxCore","cache","ajax$1","ua","isIE","isTrident","isEdge","shouldCacheBust","hasArgs","now","CHANGES_BATCH_SIZE","MAX_SIMULTANEOUS_REVS","CHANGES_TIMEOUT_BUFFER","DEFAULT_HEARTBEAT","supportsBulkGetMap","readAttachmentsAsBlobOrBuffer","encodeDocId","preprocessAttachments$2","getHost","protocol","hasUrlPrefix","user","password","auth","username","genDBUrl","genUrl","pathDel","host","port","paramsToStr","HttpPouch","setupPromise","dbUrl","ajaxOpts","nAuth","token","Authorization","userOpts","reqAjax","defaultHeaders","_ajax","ajaxPromise","adapterFun$$1","setup","skipSetup","skip_setup","encodeAttachmentId","uuid$$1","ping","compact_running","interval","doBulkGet","doBulkGetShim","numBatches","onResult","batchNum","subOpts","supportsBulkGet","fetchAttachments","filenames","promiseFactories","runNextBatch","thisErr","pool","docOrDocs","Content-Type","paramStr","batch_size","heartbeat","requestTimeout","leftToFetch","feed","seq_interval","param_name","lastFetchedSeq","aborted","xhrOpts","fetched","raw_results_length","finished","QueryParseError","captureStackTrace","NotFoundError","BuiltInError","promisedCallback","sequentialize","promiseFactory","that","uniq","theSet","mapToKeysArray","createBuiltInError","sum","jLen","jNum","evalFunctionWithEval","TaskQueue$2","createView","sourceDB","reduceFun","temporary","localDocName","cachedViews","viewSignature","createViewSignature","_cachedViews","promiseForView","depDbName","fullViewName","depDbs","lastSeqDoc","persistentQueues","tempViewQueue","CHANGES_BATCH_SIZE$1","parseViewName","emitError","builtInReduce","_sum","_count","_stats","sumsqr","_sumsqr","abstract","mapper","reducer","ddocValidator","tryMap","tryReduce","rereduce","output","sortByKeyThenValue","keyCompare","rowToDocId","postprocessAttachments","addHttpParam","paramName","asJson","coerceInteger","integerCandidate","asNumber","Number","checkQueryParseError","startkeyName","endkeyName","group","group_level","optionName","number","checkPositiveInteger","defaultsTo","getDocsToPersist","docIdsToChangesAndEmits","metaDocId","defaultMetaDoc","docData","indexableKeysToKeyValues","isGenOne","getKeyValueDocs","kvDocsRes","kvDocs","oldKeys","keyValue","newKeys","kvDoc","processKeyValueDocs","getQueue","updateView","mapResults","currentSeq","listOfDocsToPersist","docsToPersist","saveKeyValues","processNextBatch","createIndexableKeysToKeyValues","createDocIdsToChangesAndEmits","emittedKeyValue","complexKey","updateViewInQueue","queryView","shouldReduce","fetchFromView","viewOpts","expectedKeys","parsedKeyAndDocId","parsedStr","parseIndexableString","onMapResultsReady","finalResults","shouldGroup","groups","lvl","POSITIVE_INFINITY","last","groupKey","reduceTry","sliceResults","reduceView","allDocsRes","docIdsToDocs","fetchPromises","keyStart","keyEnd","queryViewInQueue","queryPromised","_query","customQuery","keysAsString","httpQuery","finalPromiseFactory","designDocName","stale","coerceOptions","viewCleanup","_viewCleanup","customViewCleanup","httpViewCleanup","docsToViews","viewsToStatus","ddocName","viewDBNames","statusIsGood","viewDBName","destroyPromises","localViewCleanup","createAbstractMapReduce","origMap","reduceFunString","builtIn","getBuiltIn","mapreduce","isGenOne$1","getDocAttachments","getDocs","src","diffs","resultDocs","fetchRevisionOneDocs","hasConflicts","bulkGetOpts","missingRev","createBulkGetOpts","bulkGetResponse","bulkGetInfo","remoteDoc","doCheckForLocalAttachments","fileHasChanged","getDocAttachmentsFromTargetOrSource","Boolean","CHECKPOINT_VERSION","REPLICATOR","CHECKPOINT_HISTORY_SIZE","LOWEST_SEQ","updateCheckpoint","checkpoint","session","session_id","replicator","Checkpointer","writeCheckpoint","updateTarget","updateSource","writeTargetCheckpoint","writeSourceCheckpoint","isForbiddenError","comparisons","targetDoc","sourceDoc","1","srcDoc","tgtDoc","compareReplicationHistory","sourceHistory","targetHistory","S","sourceRest","T","targetRest","sourceId","hasSessionId","compareReplicationLogs","sessionId","props","rest","getCheckpoint","STARTING_BACK_OFF","generateReplicationId","queryParams","filterViewName","sortObjectPropertiesByKey","queryData","md5sum","replicate","currentBatch","repId","checkpointer","batches","pendingBatch","writingCheckpoint","changesCompleted","replicationCompleted","batches_limit","changesPending","changedDocs","start_time","docs_read","docs_written","doc_write_failures","errors","initCheckpointer","checkpointOpts","writeDocs","bulkOpts","completeReplication","errorsById","errorsNo","errorName","finishBatch","outResult","getChanges","onCheckpointError","getBatchDocs","got","startNextBatch","abortReplication","processPendingBatch","fatalError","end_time","retry","back_off_function","backOffSet","current_back_off","backOff","onChangesComplete","onChangesError","_abortChanges","abortChanges","startChanges","_addedListeners","Replication","toPouch","PouchConstructor","replicateWrapper","replicateRet","sync$1","Sync","canceled","optsPush","optsPull","pull","pullChange","direction","pushChange","pushDenied","pullDenied","pushPaused","pullPaused","pushActive","pullActive","removed","removeAll","addOneListener","success","_readyCalled","sync","replicateMethods","other"],"mappings":"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","file":"pouchdb-browser-prod.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && msCrypto.getRandomValues.bind(msCrypto));\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","'use strict';\n\n/**\n * Stringify/parse functions that don't operate\n * recursively, so they avoid call stack exceeded\n * errors.\n */\nexports.stringify = function stringify(input) {\n  var queue = [];\n  queue.push({obj: input});\n\n  var res = '';\n  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n  while ((next = queue.pop())) {\n    obj = next.obj;\n    prefix = next.prefix || '';\n    val = next.val || '';\n    res += prefix;\n    if (val) {\n      res += val;\n    } else if (typeof obj !== 'object') {\n      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n    } else if (obj === null) {\n      res += 'null';\n    } else if (Array.isArray(obj)) {\n      queue.push({val: ']'});\n      for (i = obj.length - 1; i >= 0; i--) {\n        arrayPrefix = i === 0 ? '' : ',';\n        queue.push({obj: obj[i], prefix: arrayPrefix});\n      }\n      queue.push({val: '['});\n    } else { // object\n      keys = [];\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          keys.push(k);\n        }\n      }\n      queue.push({val: '}'});\n      for (i = keys.length - 1; i >= 0; i--) {\n        key = keys[i];\n        value = obj[key];\n        objPrefix = (i > 0 ? ',' : '');\n        objPrefix += JSON.stringify(key) + ':';\n        queue.push({obj: value, prefix: objPrefix});\n      }\n      queue.push({val: '{'});\n    }\n  }\n  return res;\n};\n\n// Convenience function for the parse function.\n// This pop function is basically copied from\n// pouchCollate.parseIndexableString\nfunction pop(obj, stack, metaStack) {\n  var lastMetaElement = metaStack[metaStack.length - 1];\n  if (obj === lastMetaElement.element) {\n    // popping a meta-element, e.g. an object whose value is another object\n    metaStack.pop();\n    lastMetaElement = metaStack[metaStack.length - 1];\n  }\n  var element = lastMetaElement.element;\n  var lastElementIndex = lastMetaElement.index;\n  if (Array.isArray(element)) {\n    element.push(obj);\n  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n    var key = stack.pop();\n    element[key] = obj;\n  } else {\n    stack.push(obj); // obj with key only\n  }\n}\n\nexports.parse = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n  var collationIndex,parsedNum,numChar;\n  var parsedString,lastCh,numConsecutiveSlashes,ch;\n  var arrayElement, objElement;\n  while (true) {\n    collationIndex = str[i++];\n    if (collationIndex === '}' ||\n        collationIndex === ']' ||\n        typeof collationIndex === 'undefined') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack.pop(), stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case ':':\n      case ',':\n        break;\n      case 'n':\n        i += 3; // 'ull'\n        pop(null, stack, metaStack);\n        break;\n      case 't':\n        i += 3; // 'rue'\n        pop(true, stack, metaStack);\n        break;\n      case 'f':\n        i += 4; // 'alse'\n        pop(false, stack, metaStack);\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '-':\n        parsedNum = '';\n        i--;\n        while (true) {\n          numChar = str[i++];\n          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n            parsedNum += numChar;\n          } else {\n            i--;\n            break;\n          }\n        }\n        pop(parseFloat(parsedNum), stack, metaStack);\n        break;\n      case '\"':\n        parsedString = '';\n        lastCh = void 0;\n        numConsecutiveSlashes = 0;\n        while (true) {\n          ch = str[i++];\n          if (ch !== '\"' || (lastCh === '\\\\' &&\n              numConsecutiveSlashes % 2 === 1)) {\n            parsedString += ch;\n            lastCh = ch;\n            if (lastCh === '\\\\') {\n              numConsecutiveSlashes++;\n            } else {\n              numConsecutiveSlashes = 0;\n            }\n          } else {\n            break;\n          }\n        }\n        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n        break;\n      case '[':\n        arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '{':\n        objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","'use strict';\n\nmodule.exports = argsArray;\n\nfunction argsArray(fun) {\n  return function () {\n    var len = arguments.length;\n    if (len) {\n      var args = [];\n      var i = -1;\n      while (++i < len) {\n        args[i] = arguments[i];\n      }\n      return fun.call(this, args);\n    } else {\n      return fun.call(this, []);\n    }\n  };\n}","'use strict';\nvar immediate = require('immediate');\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar lie = _interopDefault(require('lie'));\nvar getArguments = _interopDefault(require('argsarray'));\nvar nextTick = _interopDefault(require('immediate'));\nvar events = require('events');\nvar inherits = _interopDefault(require('inherits'));\nvar uuidV4 = _interopDefault(require('uuid'));\nvar debug = _interopDefault(require('debug'));\nvar Md5 = _interopDefault(require('spark-md5'));\nvar vuvuzela = _interopDefault(require('vuvuzela'));\n\n/* istanbul ignore next */\nvar PouchPromise = typeof Promise === 'function' ? Promise : lie;\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new PouchPromise(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return PouchPromise.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return PouchPromise.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new PouchPromise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n/* global Map,Set */\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nfunction isChromeApp() {\n  return (typeof chrome !== \"undefined\" &&\n    typeof chrome.storage !== \"undefined\" &&\n    typeof chrome.storage.local !== \"undefined\");\n}\n\nvar hasLocal;\n\nif (isChromeApp()) {\n  hasLocal = false;\n} else {\n  try {\n    localStorage.setItem('_pouch_check_localstorage', 1);\n    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n  } catch (e) {\n    hasLocal = false;\n  }\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n// avoid using process.nextTick() directly because the polyfill is very large and we don't\n// need all of it (see: https://github.com/defunctzombie/node-process).\n// \"immediate\" 3.0.8 is used by lie, and it's a smaller version of the latest \"immediate\"\n// package, so it's the one we use.\n// When we use nextTick() in our codebase, we only care about not releasing Zalgo\n// (see: http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony).\n// Microtask vs macrotask doesn't matter to us. So we're free to use the fastest\n// (least latency) option, which is \"immediate\" due to use of microtasks.\n// All of our nextTicks are isolated to this one function so we can easily swap out one\n// implementation for another.\n\ninherits(Changes, events.EventEmitter);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (isChromeApp()) {\n    chrome.storage.onChanged.addListener(function (e) {\n      // make sure it's event addressed to us\n      if (e.db_name != null) {\n        //object only has oldValue, newValue members\n        self.emit(e.dbName.newValue);\n      }\n    });\n  } else if (hasLocalStorage()) {\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    } else { // old IE\n      window.attachEvent(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    }\n  }\n}\n\nfunction Changes() {\n  events.EventEmitter.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        nextTick(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  events.EventEmitter.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (isChromeApp()) {\n    chrome.storage.local.set({dbName: dbName});\n  } else if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (typeof console !== 'undefined' && typeof console[method] === 'function') {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar $inject_Object_assign = assign;\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n// for browsers that don't support it like IE\n\n/* istanbul ignore next */\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n// designed to opt-in to certain optimizations, such as\n// avoiding checks for \"dependentDbs\" and other things that\n// we know only apply to local databases. In general, \"remote\"\n// should be true for the http adapter, and for third-party\n// adapters with similar expensive boundaries to cross for\n// every API call, such as socket-pouch and worker-pouch.\n// Previously, this was handled via db.type() === 'http'\n// which is now deprecated.\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 events.EventEmitter.listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint maxlen: 0, no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (scope.hasOwnProperty(key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new PouchPromise(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nfunction rev() {\n  return uuidV4.v4().replace(/-/g, '').toLowerCase();\n}\n\nvar uuid = uuidV4.v4;\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n// https://github.com/apache/couchdb-couch/blob/master/src/couch_key_tree.erl\n//\n// But for a quick intro, CouchDB uses a revision tree to store a documents\n// history, A -> B -> C, when a document has conflicts, that is a branch in the\n// tree, A -> (B1 | B2 -> C), We store these as a nested array in the format\n//\n// KeyTree = [Path ... ]\n// Path = {pos: position_from_root, ids: Tree}\n// Tree = [Key, Opts, [Tree, ...]], in particular single node: [Key, []]\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = (path.pos + s) + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else { // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  }\n\n  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\ninherits(Changes$2, events.EventEmitter);\n\nfunction tryCatchInChangeListener(self, change, pending, lastSeq) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change, pending, lastSeq);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$2(db, opts, callback) {\n  events.EventEmitter.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change, pending, lastSeq);\n  };\n\n  var promise = new PouchPromise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\nChanges$2.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges$2.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges$2.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.normalize(opts);\n    if (PouchDB._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn',\n          'The \"' + key + '\" option was passed in to changes/replicate, ' +\n          'but pouchdb-changes-filter plugin is not installed, so it ' +\n          'was ignored. Please install the plugin to enable filtering.'\n        );\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev$$1 = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev$$1] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev$$1});\n    }\n    return rev$$1;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysParse(opts) {\n  var keys =  ('limit' in opts) ?\n    opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n    (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  opts.keys = keys;\n  opts.skip = 0;\n  delete opts.limit;\n  if (opts.descending) {\n    keys.reverse();\n    opts.descending = false;\n  }\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      nextTick(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\ninherits(AbstractPouchDB, events.EventEmitter);\n\nfunction AbstractPouchDB() {\n  events.EventEmitter.call(this);\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback, doc._id));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  var self = this;\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {ok: true, id: doc._id, rev: doc._rev};\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev();\n\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({docs: [doc]}, opts, yankError(next, doc._id));\n    }\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev$$1,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev$$1) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev$$1) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback, newDoc._id));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new ExportedMap();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev$$1 = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev$$1);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev$$1);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev$$1) {\n      addToMissing(id, rev$$1);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev$$1) {\n      if (height[rev$$1] > maxHeight) {\n        candidates.push(rev$$1);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev$$1 = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev$$1) !== -1) {\n        revs.push(rev$$1);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    PouchPromise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev$$1) {\n            return rev$$1.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev$$1) {\n          pos--;\n          return {\n            rev: pos + '-' + rev$$1.id,\n            status: rev$$1.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (!isRemote(this)) {\n      allDocsKeysParse(opts);\n      if (opts.keys.length === 0) {\n        return this._allDocs({limit: 0}, callback);\n      }\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return new Changes$2(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    PouchPromise.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue$1() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue$1.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue$1.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue$1.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue$1.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB.adapters;\n  var preferredAdapters = PouchDB.preferredAdapters;\n  var prefix = PouchDB.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\ninherits(PouchDB, AbstractPouchDB);\nfunction PouchDB(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB)) {\n    return new PouchDB(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB.adapters[opts.adapter] ||\n      !PouchDB.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue$1();\n\n  self.adapter = opts.adapter;\n\n  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\nPouchDB.adapters = {};\nPouchDB.preferredAdapters = [];\n\nPouchDB.prefix = '_pouch_';\n\nvar eventEmitter = new events.EventEmitter();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(events.EventEmitter.prototype).forEach(function (key) {\n    if (typeof events.EventEmitter.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n    destructListeners.get(db.name).push(db);\n  });\n\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n    dbList.splice(pos, 1);\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed',true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB);\n\nPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB.prototype[id] = obj[id];\n    });\n  }\n  if (this.__defaults) {\n    PouchDB.__defaults = $inject_Object_assign({}, this.__defaults);\n  }\n  return PouchDB;\n};\n\nPouchDB.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n    PouchDB.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB);\n\n  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n  Object.keys(PouchDB).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\n// managed automatically by set-version.js\nvar version = \"6.4.3\";\n\nfunction debugPouch(PouchDB) {\n  PouchDB.debug = debug;\n  var logs = {};\n  /* istanbul ignore next */\n  PouchDB.on('debug', function (args) {\n    // first argument is log identifier\n    var logId = args[0];\n    // rest should be passed verbatim to debug module\n    var logArgs = args.slice(1);\n    if (!logs[logId]) {\n      logs[logId] = debug('pouchdb:' + logId);\n    }\n    logs[logId].apply(null, logArgs);\n  });\n}\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction compare$1(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else { // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n  if ('$and' in result) {\n    result = mergeAndedSelectors(result['$and']);\n    wasAnded = true;\n  }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare$1(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  return Object.keys(matcher).every(function (userOperator) {\n    var userValue = matcher[userOperator];\n    return match(userOperator, doc, userValue, parsedField, docFieldValue);\n  });\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor ) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod ) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' +\n                  'Please use one of object, string, array, number, boolean or null.');\n\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ?\n        opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' &&\n    !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB.plugin(debugPouch);\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB.plugin(applyChangesFilterPlugin);\n\nPouchDB.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev$$1) {\n  if (!/^\\d+-./.test(rev$$1)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev$$1.indexOf('-');\n  var left = rev$$1.substring(0, idx);\n  var right = rev$$1.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits) {\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = rev();\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(arrayBufferToBinaryString(\n      new FileReaderSync().readAsArrayBuffer(blob)));\n  }\n\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n  }\n\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev)) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && ((\n    (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf') ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return PouchPromise.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return PouchPromise.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new PouchPromise(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = $inject_Object_assign(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev$$1) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev$$1;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar changesHandler$$1 = new Changes();\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n      META_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    }\n    // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    changesHandler$$1.notify(api._meta.name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    docCountDelta += delta;\n    updateDocCountIfReady();\n\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\n// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\n  // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor), or batchSize is -1 (i.e. batchSize unlimited,\n  //    not really clear the user wants a batched approach where the entire DB is read into memory,\n  //    perhaps they are filtering on a per-doc basis)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n  var useGetAll = typeof objectStore.getAll === 'function' &&\n    typeof objectStore.getAllKeys === 'function' &&\n    batchSize > 1 && !descending;\n\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function continuePseudoCursor() {\n    if (!keysBatch.length) { // no more results\n      return onBatch();\n    }\n    // fetch next batch, exclusive start\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n          true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (!cursor) { // done\n      return onBatch();\n    }\n    // regular IDBCursor acts like a batch where batch size is always 1\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n\n  if (useGetAll) {\n    pseudoCursor = {\"continue\": continuePseudoCursor};\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n}\n\n// simple shim for objectStore.getAll(), falling back to IDBCursor\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  }\n  // fall back to cursors\n  var values = [];\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\n\nfunction allDocsKeys(keys, docStore, onBatch) {\n  // It's not guaranted to be returned in right order  \n  var valuesBatch = [];\n  var count = 0;\n  keys.forEach(function (key, index) {\n    docStore.get(key).onsuccess = function (event) {\n      if (event.target.result) {\n        valuesBatch[index] = event.target.result;\n      } else {\n        valuesBatch[index] = {key: key, error: 'not_found'};\n      }\n      count++;\n      if (count === keys.length) {\n        onBatch(keys, valuesBatch, {});\n      }\n    };\n  });\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var keys = 'keys' in opts ? opts.keys : false; \n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n\n  var keyRange; \n  var keyRangeError;\n  if (!keys) {\n    keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n    keyRangeError = keyRange && keyRange.error;\n    if (keyRangeError && \n      !(keyRangeError.name === \"DataError\" && keyRangeError.code === 0)) {\n      // DataError with error code 0 indicates start is less than end, so\n      // can just do an empty query. Else need to throw\n      return callback(createError(IDB_ERROR,\n        keyRangeError.name, keyRangeError.message));\n    }\n  }\n\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n  var updateSeq;\n\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n\n  /* istanbul ignore if */\n  if (opts.update_seq) {\n    getMaxUpdateSeq(seqStore, function (e) { \n      if (e.target.result && e.target.result.length > 0) {\n        updateSeq = e.target.result[0];\n      }\n    });\n  }\n\n  function getMaxUpdateSeq(objectStore, onSuccess) {\n    function onCursor(e) {\n      var cursor = e.target.result;\n      var maxKey = undefined;\n      if (cursor && cursor.key) {\n        maxKey = cursor.key;\n      } \n      return onSuccess({\n        target: {\n          result: [maxKey]\n        }\n      });\n    }\n    objectStore.openCursor(null, 'prev').onsuccess = onCursor;\n  }\n\n  // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result);\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n    if (deleted) {\n      if (keys) {\n        results.push(row);\n        // deleted docs are okay with \"keys\" requests\n        row.value.deleted = true;\n        row.doc = null;\n      }\n    } else if (skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n      var batchValue = batchValues[i];\n      if (batchValue.error && keys) {\n        // key was not found with \"keys\" requests\n        results.push(batchValue);\n        continue;\n      }\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n    processBatch(batchValues);\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n\n  function onGetAll(e) {\n    var values = e.target.result;\n    if (opts.descending) {\n      values = values.reverse();\n    }\n    processBatch(values);\n  }\n\n  function onResultsReady() {\n    var returnVal = {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    };\n    \n    /* istanbul ignore if */\n    if (opts.update_seq && updateSeq !== undefined) {\n      returnVal.update_seq = updateSeq;\n    }\n    callback(null, returnVal);\n  }\n\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  }\n\n  // don't bother doing any requests if start > end or limit === 0\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n  if (keys) {\n    return allDocsKeys(opts.keys, docStore, onBatch);\n  }\n  if (limit === -1) { // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  }\n  // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new PouchPromise(function (resolve) {\n    var blob$$1 = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob$$1, 'key');\n\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n\n    txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n// and sequentially - i.e. we wait for the async IDB open to *fully* complete\n// before calling the next one. This works around IE/Edge race conditions in IDB.\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      nextTick(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler$$1.addListener(dbName, id, api, opts);\n    changesHandler$$1.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler$$1.removeListener(dbName, id);\n      }\n    };\n  }\n\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n  var returnDocs;\n  if ('return_docs' in opts) {\n    returnDocs = opts.return_docs;\n  } else if ('returnDocs' in opts) {\n    // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n    returnDocs = opts.returnDocs;\n  } else {\n    returnDocs = true;\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) { // done\n      return;\n    }\n\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n\n      var filtered = filter(change);\n      if (typeof filtered === 'object') { // anything but true/false indicates error\n        return opts.complete(filtered);\n      }\n\n      if (filtered) {\n        numResults++;\n        if (returnDocs) {\n          results.push(change);\n        }\n        // process the attachment immediately\n        // for the benefit of live listeners\n        if (opts.attachments && opts.include_docs) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              opts.onChange(change);\n            });\n          });\n        } else {\n          opts.onChange(change);\n        }\n      }\n    }\n\n    function onBatchDone() {\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n        var winningDoc = winningDocs[i];\n        if (!winningDoc) {\n          continue;\n        }\n        var metadata = metadatas[i];\n        processMetadataAndWinningDoc(metadata, winningDoc);\n      }\n\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    }\n\n    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    }\n\n    // fetch winning doc in separate request\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n\n    var metadata = docIdsToMetadata.get(doc._id);\n    if (metadata) { // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    }\n    // metadata not cached, have to go fetch it\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n  var keyRange = (opts.since && !opts.descending) ?\n    IDBKeyRange.lowerBound(opts.since, true) : null;\n\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\n\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  api._meta = null;\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev$$1 = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev$$1;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, callback);\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev$$1;\n      if (!opts.rev) {\n        rev$$1 = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev$$1 = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev$$1;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, callback);\n  };\n\n  api._changes = function idbChanges(opts) {\n    return changes(opts, api, dbName, idb);\n  };\n\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev$$1 = pos + '-' + revHash;\n        if (revs.indexOf(rev$$1) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    changesHandler$$1.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return nextTick(function () {\n      callback(null, api);\n    });\n  }\n\n  var req;\n  if (opts.storage) {\n    req = tryStorageOption(dbName, opts.storage);\n  } else {\n    req = indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n      var instanceKey = dbName + '_id';\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    }\n\n    //\n    // fetch or generate the instanceId\n    //\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || { id: META_STORE };\n      storeMetaDocIfReady();\n    };\n\n    //\n    // countDocs\n    //\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    });\n\n    //\n    // check blob support\n    //\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    });\n\n    // only when the metadata put transaction has completed,\n    // consider the setup done\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n    txn.onabort = idbError(callback);\n  };\n\n  req.onerror = function () {\n    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Issue #2533, we finally gave up on doing bug\n  // detection instead of browser sniffing. Safari brought us\n  // to our knees.\n  var isSafari = typeof openDatabase !== 'undefined' &&\n    /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) &&\n    !/Chrome/.test(navigator.userAgent) &&\n    !/BlackBerry/.test(navigator.platform);\n\n  // Safari <10.1 does not meet our requirements for IDB support (#5572)\n  // since Safari 10.1 shipped with fetch, we can use that to detect it\n  var hasFetch = typeof fetch === 'function' &&\n    fetch.toString().indexOf('[native code') !== -1;\n\n  // On Firefox SecurityError is thrown while referencing indexedDB if cookies\n  // are not allowed. `typeof indexedDB` also triggers the error.\n  try {\n    // some outdated implementations of IDB that appear on Samsung\n    // and HTC Android devices <4.4 are missing IDBKeyRange\n    return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n      typeof IDBKeyRange !== 'undefined';\n  } catch (e) {\n    return false;\n  }\n};\n\nfunction tryStorageOption(dbName, storage) {\n  try { // option only available in Firefox 26+\n    return indexedDB.open(dbName, {\n      version: ADAPTER_VERSION,\n      storage: storage\n    });\n  } catch (err) {\n      return indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n}\n\nfunction IDBPouch (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n}\n\n//\n// Parsing hex strings. Yeah.\n//\n// So basically we need this because of a bug in WebSQL:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n//\n// UTF-8 and UTF-16 are provided as separate functions\n// for meager performance improvements\n//\n\nfunction decodeUtf8(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction hexToInt(charCode) {\n  // '0'-'9' is 48-57\n  // 'A'-'F' is 65-70\n  // SQLite will only give us uppercase hex\n  return charCode < 65 ? (charCode - 48) : (charCode - 55);\n}\n\n\n// Example:\n// pragma encoding=utf8;\n// select hex('A');\n// returns '41'\nfunction parseHexUtf8(str, start, end) {\n  var result = '';\n  while (start < end) {\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start++)) << 4) |\n        hexToInt(str.charCodeAt(start++)));\n  }\n  return result;\n}\n\n// Example:\n// pragma encoding=utf16;\n// select hex('A');\n// returns '4100'\n// notice that the 00 comes after the 41 (i.e. it's swizzled)\nfunction parseHexUtf16(str, start, end) {\n  var result = '';\n  while (start < end) {\n    // UTF-16, so swizzle the bytes\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start + 2)) << 12) |\n        (hexToInt(str.charCodeAt(start + 3)) << 8) |\n        (hexToInt(str.charCodeAt(start)) << 4) |\n        hexToInt(str.charCodeAt(start + 1)));\n    start += 4;\n  }\n  return result;\n}\n\nfunction parseHexString(str, encoding) {\n  if (encoding === 'UTF-8') {\n    return decodeUtf8(parseHexUtf8(str, 0, str.length));\n  } else {\n    return parseHexUtf16(str, 0, str.length);\n  }\n}\n\nfunction quote(str) {\n  return \"'\" + str + \"'\";\n}\n\nvar ADAPTER_VERSION$1 = 7; // used to manage migrations\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\nvar DOC_STORE$1 = quote('document-store');\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE$1 = quote('by-sequence');\n// Where we store attachments\nvar ATTACH_STORE$1 = quote('attach-store');\nvar LOCAL_STORE$1 = quote('local-store');\nvar META_STORE$1 = quote('metadata-store');\n// where we store many-to-many relations between attachment\n// digests and seqs\nvar ATTACH_AND_SEQ_STORE$1 = quote('attach-seq-store');\n\n// escapeBlob and unescapeBlob are workarounds for a websql bug:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n// The goal is to never actually insert the \\u0000 character\n// in the database.\nfunction escapeBlob(str) {\n  return str\n    .replace(/\\u0002/g, '\\u0002\\u0002')\n    .replace(/\\u0001/g, '\\u0001\\u0002')\n    .replace(/\\u0000/g, '\\u0001\\u0001');\n}\n\nfunction unescapeBlob(str) {\n  return str\n    .replace(/\\u0001\\u0001/g, '\\u0000')\n    .replace(/\\u0001\\u0002/g, '\\u0001')\n    .replace(/\\u0002\\u0002/g, '\\u0002');\n}\n\nfunction stringifyDoc(doc) {\n  // don't bother storing the id/rev. it uses lots of space,\n  // in persistent map/reduce especially\n  delete doc._id;\n  delete doc._rev;\n  return JSON.stringify(doc);\n}\n\nfunction unstringifyDoc(doc, id, rev$$1) {\n  doc = JSON.parse(doc);\n  doc._id = id;\n  doc._rev = rev$$1;\n  return doc;\n}\n\n// question mark groups IN queries, e.g. 3 -> '(?,?,?)'\nfunction qMarks(num) {\n  var s = '(';\n  while (num--) {\n    s += '?';\n    if (num) {\n      s += ',';\n    }\n  }\n  return s + ')';\n}\n\nfunction select(selector, table, joiner, where, orderBy) {\n  return 'SELECT ' + selector + ' FROM ' +\n    (typeof table === 'string' ? table : table.join(' JOIN ')) +\n    (joiner ? (' ON ' + joiner) : '') +\n    (where ? (' WHERE ' +\n    (typeof where === 'string' ? where : where.join(' AND '))) : '') +\n    (orderBy ? (' ORDER BY ' + orderBy) : '');\n}\n\nfunction compactRevs$1(revs, docId, tx) {\n\n  if (!revs.length) {\n    return;\n  }\n\n  var numDone = 0;\n  var seqs = [];\n\n  function checkDone() {\n    if (++numDone === revs.length) { // done\n      deleteOrphans();\n    }\n  }\n\n  function deleteOrphans() {\n    // find orphaned attachment digests\n\n    if (!seqs.length) {\n      return;\n    }\n\n    var sql = 'SELECT DISTINCT digest AS digest FROM ' +\n      ATTACH_AND_SEQ_STORE$1 + ' WHERE seq IN ' + qMarks(seqs.length);\n\n    tx.executeSql(sql, seqs, function (tx, res) {\n\n      var digestsToCheck = [];\n      for (var i = 0; i < res.rows.length; i++) {\n        digestsToCheck.push(res.rows.item(i).digest);\n      }\n      if (!digestsToCheck.length) {\n        return;\n      }\n\n      var sql = 'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 +\n        ' WHERE seq IN (' +\n        seqs.map(function () { return '?'; }).join(',') +\n        ')';\n      tx.executeSql(sql, seqs, function (tx) {\n\n        var sql = 'SELECT digest FROM ' + ATTACH_AND_SEQ_STORE$1 +\n          ' WHERE digest IN (' +\n          digestsToCheck.map(function () { return '?'; }).join(',') +\n          ')';\n        tx.executeSql(sql, digestsToCheck, function (tx, res) {\n          var nonOrphanedDigests = new ExportedSet();\n          for (var i = 0; i < res.rows.length; i++) {\n            nonOrphanedDigests.add(res.rows.item(i).digest);\n          }\n          digestsToCheck.forEach(function (digest) {\n            if (nonOrphanedDigests.has(digest)) {\n              return;\n            }\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE digest=?',\n              [digest]);\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_STORE$1 + ' WHERE digest=?', [digest]);\n          });\n        });\n      });\n    });\n  }\n\n  // update by-seq and attach stores in parallel\n  revs.forEach(function (rev$$1) {\n    var sql = 'SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=? AND rev=?';\n\n    tx.executeSql(sql, [docId, rev$$1], function (tx, res) {\n      if (!res.rows.length) { // already deleted\n        return checkDone();\n      }\n      var seq = res.rows.item(0).seq;\n      seqs.push(seq);\n\n      tx.executeSql(\n        'DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?', [seq], checkDone);\n    });\n  });\n}\n\nfunction websqlError(callback) {\n  return function (event) {\n    guardedConsole('error', 'WebSQL threw an error', event);\n    // event may actually be a SQLError object, so report is as such\n    var errorNameMatch = event && event.constructor.toString()\n        .match(/function ([^(]+)/);\n    var errorName = (errorNameMatch && errorNameMatch[1]) || event.type;\n    var errorReason = event.target || event.message;\n    callback(createError(WSQ_ERROR, errorReason, errorName));\n  };\n}\n\nfunction getSize(opts) {\n  if ('size' in opts) {\n    // triggers immediate popup in iOS, fixes #2347\n    // e.g. 5000001 asks for 5 MB, 10000001 asks for 10 MB,\n    return opts.size * 1000000;\n  }\n  // In iOS, doesn't matter as long as it's <= 5000000.\n  // Except that if you request too much, our tests fail\n  // because of the native \"do you accept?\" popup.\n  // In Android <=4.3, this value is actually used as an\n  // honest-to-god ceiling for data, so we need to\n  // set it to a decently high number.\n  var isAndroid = typeof navigator !== 'undefined' &&\n    /Android/.test(navigator.userAgent);\n  return isAndroid ? 5000000 : 1; // in PhantomJS, if you use 0 it will crash\n}\n\nfunction websqlBulkDocs(dbOpts, req, opts, api, db, websqlChanges, callback) {\n  var newEdits = opts.new_edits;\n  var userDocs = req.docs;\n\n  // Parse the docs, give them a sequence number for the result\n  var docInfos = userDocs.map(function (doc) {\n    if (doc._id && isLocalId(doc._id)) {\n      return doc;\n    }\n    var newDoc = parseDoc(doc, newEdits);\n    return newDoc;\n  });\n\n  var docInfoErrors = docInfos.filter(function (docInfo) {\n    return docInfo.error;\n  });\n  if (docInfoErrors.length) {\n    return callback(docInfoErrors[0]);\n  }\n\n  var tx;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n\n  var preconditionErrored;\n  function complete() {\n    if (preconditionErrored) {\n      return callback(preconditionErrored);\n    }\n    websqlChanges.notify(api._name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n    var sql = 'SELECT count(*) as cnt FROM ' + ATTACH_STORE$1 +\n      ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.item(0).cnt === 0) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        callback(err);\n      } else {\n        callback();\n      }\n    });\n  }\n\n  function verifyAttachments(finish) {\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    function finish() {\n      var data = docInfo.data;\n      var deletedInt = newRevIsDeleted ? 1 : 0;\n\n      var id = data._id;\n      var rev = data._rev;\n      var json = stringifyDoc(data);\n      var sql = 'INSERT INTO ' + BY_SEQ_STORE$1 +\n        ' (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);';\n      var sqlArgs = [id, rev, json, deletedInt];\n\n      // map seqs to attachment digests, which\n      // we will need later during compaction\n      function insertAttachmentMappings(seq, callback) {\n        var attsAdded = 0;\n        var attsToAdd = Object.keys(data._attachments || {});\n\n        if (!attsToAdd.length) {\n          return callback();\n        }\n        function checkDone() {\n          if (++attsAdded === attsToAdd.length) {\n            callback();\n          }\n          return false; // ack handling a constraint error\n        }\n        function add(att) {\n          var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n            ' (digest, seq) VALUES (?,?)';\n          var sqlArgs = [data._attachments[att].digest, seq];\n          tx.executeSql(sql, sqlArgs, checkDone, checkDone);\n          // second callback is for a constaint error, which we ignore\n          // because this docid/rev has already been associated with\n          // the digest (e.g. when new_edits == false)\n        }\n        for (var i = 0; i < attsToAdd.length; i++) {\n          add(attsToAdd[i]); // do in parallel\n        }\n      }\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        var seq = result.insertId;\n        insertAttachmentMappings(seq, function () {\n          dataWritten(tx, seq);\n        });\n      }, function () {\n        // constraint error, recover by updating instead (see #1638)\n        var fetchSql = select('seq', BY_SEQ_STORE$1, null,\n          'doc_id=? AND rev=?');\n        tx.executeSql(fetchSql, [id, rev], function (tx, res) {\n          var seq = res.rows.item(0).seq;\n          var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n            ' SET json=?, deleted=? WHERE doc_id=? AND rev=?;';\n          var sqlArgs = [json, deletedInt, id, rev];\n          tx.executeSql(sql, sqlArgs, function (tx) {\n            insertAttachmentMappings(seq, function () {\n              dataWritten(tx, seq);\n            });\n          });\n        });\n        return false; // ack that we've handled the error\n      });\n    }\n\n    function collectResults(attachmentErr) {\n      if (!err) {\n        if (attachmentErr) {\n          err = attachmentErr;\n          callback(err);\n        } else if (recv === attachments.length) {\n          finish();\n        }\n      }\n    }\n\n    var err = null;\n    var recv = 0;\n\n    docInfo.data._id = docInfo.metadata.id;\n    docInfo.data._rev = docInfo.metadata.rev;\n    var attachments = Object.keys(docInfo.data._attachments || {});\n\n\n    if (newRevIsDeleted) {\n      docInfo.data._deleted = true;\n    }\n\n    function attachmentSaved(err) {\n      recv++;\n      collectResults(err);\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        recv++;\n        collectResults();\n      }\n    });\n\n    if (!attachments.length) {\n      finish();\n    }\n\n    function dataWritten(tx, seq) {\n      var id = docInfo.metadata.id;\n\n      var revsToCompact = docInfo.stemmedRevs || [];\n      if (isUpdate && api.auto_compaction) {\n        revsToCompact = compactTree(docInfo.metadata).concat(revsToCompact);\n      }\n      if (revsToCompact.length) {\n        compactRevs$1(revsToCompact, id, tx);\n      }\n\n      docInfo.metadata.seq = seq;\n      var rev = docInfo.metadata.rev;\n      delete docInfo.metadata.rev;\n\n      var sql = isUpdate ?\n      'UPDATE ' + DOC_STORE$1 +\n      ' SET json=?, max_seq=?, winningseq=' +\n      '(SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=' + DOC_STORE$1 + '.id AND rev=?) WHERE id=?'\n        : 'INSERT INTO ' + DOC_STORE$1 +\n      ' (id, winningseq, max_seq, json) VALUES (?,?,?,?);';\n      var metadataStr = safeJsonStringify(docInfo.metadata);\n      var params = isUpdate ?\n        [metadataStr, seq, winningRev$$1, id] :\n        [id, seq, seq, metadataStr];\n      tx.executeSql(sql, params, function () {\n        results[resultsIdx] = {\n          ok: true,\n          id: docInfo.metadata.id,\n          rev: rev\n        };\n        fetchedDocs.set(id, docInfo.metadata);\n        callback();\n      });\n    }\n  }\n\n  function websqlProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, tx,\n                results, writeDoc, opts);\n  }\n\n  function fetchExistingDocs(callback) {\n    if (!docInfos.length) {\n      return callback();\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        callback();\n      }\n    }\n\n    docInfos.forEach(function (docInfo) {\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        return checkDone(); // skip local docs\n      }\n      var id = docInfo.metadata.id;\n      tx.executeSql('SELECT json FROM ' + DOC_STORE$1 +\n      ' WHERE id = ?', [id], function (tx, result) {\n        if (result.rows.length) {\n          var metadata = safeJsonParse(result.rows.item(0).json);\n          fetchedDocs.set(id, metadata);\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function saveAttachment(digest, data, callback) {\n    var sql = 'SELECT digest FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.length) { // attachment already exists\n        return callback();\n      }\n      // we could just insert before selecting and catch the error,\n      // but my hunch is that it's cheaper not to serialize the blob\n      // from JS to C if we don't have to (TODO: confirm this)\n      sql = 'INSERT INTO ' + ATTACH_STORE$1 +\n      ' (digest, body, escaped) VALUES (?,?,1)';\n      tx.executeSql(sql, [digest, escapeBlob(data)], function () {\n        callback();\n      }, function () {\n        // ignore constaint errors, means it already exists\n        callback();\n        return false; // ack we handled the error\n      });\n    });\n  }\n\n  preprocessAttachments(docInfos, 'binary', function (err) {\n    if (err) {\n      return callback(err);\n    }\n    db.transaction(function (txn) {\n      tx = txn;\n      verifyAttachments(function (err) {\n        if (err) {\n          preconditionErrored = err;\n        } else {\n          fetchExistingDocs(websqlProcessDocs);\n        }\n      });\n    }, websqlError(callback), complete);\n  });\n}\n\nvar cachedDatabases = new ExportedMap();\n\n// openDatabase passed in through opts (e.g. for node-websql)\nfunction openDatabaseWithOpts(opts) {\n  return opts.websql(opts.name, opts.version, opts.description, opts.size);\n}\n\nfunction openDBSafely(opts) {\n  try {\n    return {\n      db: openDatabaseWithOpts(opts)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nfunction openDB(opts) {\n  var cachedResult = cachedDatabases.get(opts.name);\n  if (!cachedResult) {\n    cachedResult = openDBSafely(opts);\n    cachedDatabases.set(opts.name, cachedResult);\n  }\n  return cachedResult;\n}\n\nvar websqlChanges = new Changes();\n\nfunction fetchAttachmentsIfNecessary$1(doc, opts, api, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var attOpts = {binary: opts.binary, ctx: txn};\n    api._getAttachment(doc._id, att, attObj, attOpts, function (_, data) {\n      doc._attachments[att] = $inject_Object_assign(\n        pick(attObj, ['digest', 'content_type']),\n        { data: data }\n      );\n      checkDone();\n    });\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\nvar POUCH_VERSION = 1;\n\n// these indexes cover the ground for most allDocs queries\nvar BY_SEQ_STORE_DELETED_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'by-seq-deleted-idx\\' ON ' +\n  BY_SEQ_STORE$1 + ' (seq, deleted)';\nvar BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'by-seq-doc-id-rev\\' ON ' +\n    BY_SEQ_STORE$1 + ' (doc_id, rev)';\nvar DOC_STORE_WINNINGSEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'doc-winningseq-idx\\' ON ' +\n  DOC_STORE$1 + ' (winningseq)';\nvar ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'attach-seq-seq-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (seq)';\nvar ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'attach-seq-digest-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (digest, seq)';\n\nvar DOC_STORE_AND_BY_SEQ_JOINER = BY_SEQ_STORE$1 +\n  '.seq = ' + DOC_STORE$1 + '.winningseq';\n\nvar SELECT_DOCS = BY_SEQ_STORE$1 + '.seq AS seq, ' +\n  BY_SEQ_STORE$1 + '.deleted AS deleted, ' +\n  BY_SEQ_STORE$1 + '.json AS data, ' +\n  BY_SEQ_STORE$1 + '.rev AS rev, ' +\n  DOC_STORE$1 + '.json AS metadata';\n\nfunction WebSqlPouch(opts, callback) {\n  var api = this;\n  var instanceId = null;\n  var size = getSize(opts);\n  var idRequests = [];\n  var encoding;\n\n  api._name = opts.name;\n\n  // extend the options here, because sqlite plugin has a ton of options\n  // and they are constantly changing, so it's more prudent to allow anything\n  var websqlOpts = $inject_Object_assign({}, opts, {\n    version: POUCH_VERSION,\n    description: opts.name,\n    size: size\n  });\n  var openDBResult = openDB(websqlOpts);\n  if (openDBResult.error) {\n    return websqlError(callback)(openDBResult.error);\n  }\n  var db = openDBResult.db;\n  if (typeof db.readTransaction !== 'function') {\n    // doesn't exist in sqlite plugin\n    db.readTransaction = db.transaction;\n  }\n\n  function dbCreated() {\n    // note the db name in case the browser upgrades to idb\n    if (hasLocalStorage()) {\n      window.localStorage['_pouch__websqldb_' + api._name] = true;\n    }\n    callback(null, api);\n  }\n\n  // In this migration, we added the 'deleted' and 'local' columns to the\n  // by-seq and doc store tables.\n  // To preserve existing user data, we re-process all the existing JSON\n  // and add these values.\n  // Called migration2 because it corresponds to adapter version (db_version) #2\n  function runMigration2(tx, callback) {\n    // index used for the join in the allDocs query\n    tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\n    tx.executeSql('ALTER TABLE ' + BY_SEQ_STORE$1 +\n      ' ADD COLUMN deleted TINYINT(1) DEFAULT 0', [], function () {\n      tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n      tx.executeSql('ALTER TABLE ' + DOC_STORE$1 +\n        ' ADD COLUMN local TINYINT(1) DEFAULT 0', [], function () {\n        tx.executeSql('CREATE INDEX IF NOT EXISTS \\'doc-store-local-idx\\' ON ' +\n          DOC_STORE$1 + ' (local, id)');\n\n        var sql = 'SELECT ' + DOC_STORE$1 + '.winningseq AS seq, ' + DOC_STORE$1 +\n          '.json AS metadata FROM ' + BY_SEQ_STORE$1 + ' JOIN ' + DOC_STORE$1 +\n          ' ON ' + BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq';\n\n        tx.executeSql(sql, [], function (tx, result) {\n\n          var deleted = [];\n          var local = [];\n\n          for (var i = 0; i < result.rows.length; i++) {\n            var item = result.rows.item(i);\n            var seq = item.seq;\n            var metadata = JSON.parse(item.metadata);\n            if (isDeleted(metadata)) {\n              deleted.push(seq);\n            }\n            if (isLocalId(metadata.id)) {\n              local.push(metadata.id);\n            }\n          }\n          tx.executeSql('UPDATE ' + DOC_STORE$1 + 'SET local = 1 WHERE id IN ' +\n            qMarks(local.length), local, function () {\n            tx.executeSql('UPDATE ' + BY_SEQ_STORE$1 +\n              ' SET deleted = 1 WHERE seq IN ' +\n              qMarks(deleted.length), deleted, callback);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we make all the local docs unversioned\n  function runMigration3(tx, callback) {\n    var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n      ' (id UNIQUE, rev, json)';\n    tx.executeSql(local, [], function () {\n      var sql = 'SELECT ' + DOC_STORE$1 + '.id AS id, ' +\n        BY_SEQ_STORE$1 + '.json AS data ' +\n        'FROM ' + BY_SEQ_STORE$1 + ' JOIN ' +\n        DOC_STORE$1 + ' ON ' + BY_SEQ_STORE$1 + '.seq = ' +\n        DOC_STORE$1 + '.winningseq WHERE local = 1';\n      tx.executeSql(sql, [], function (tx, res) {\n        var rows = [];\n        for (var i = 0; i < res.rows.length; i++) {\n          rows.push(res.rows.item(i));\n        }\n        function doNext() {\n          if (!rows.length) {\n            return callback(tx);\n          }\n          var row = rows.shift();\n          var rev$$1 = JSON.parse(row.data)._rev;\n          tx.executeSql('INSERT INTO ' + LOCAL_STORE$1 +\n              ' (id, rev, json) VALUES (?,?,?)',\n              [row.id, rev$$1, row.data], function (tx) {\n            tx.executeSql('DELETE FROM ' + DOC_STORE$1 + ' WHERE id=?',\n                [row.id], function (tx) {\n              tx.executeSql('DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?',\n                  [row.seq], function () {\n                doNext();\n              });\n            });\n          });\n        }\n        doNext();\n      });\n    });\n  }\n\n  // in this migration, we remove doc_id_rev and just use rev\n  function runMigration4(tx, callback) {\n\n    function updateRows(rows) {\n      function doNext() {\n        if (!rows.length) {\n          return callback(tx);\n        }\n        var row = rows.shift();\n        var doc_id_rev = parseHexString(row.hex, encoding);\n        var idx = doc_id_rev.lastIndexOf('::');\n        var doc_id = doc_id_rev.substring(0, idx);\n        var rev$$1 = doc_id_rev.substring(idx + 2);\n        var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n          ' SET doc_id=?, rev=? WHERE doc_id_rev=?';\n        tx.executeSql(sql, [doc_id, rev$$1, doc_id_rev], function () {\n          doNext();\n        });\n      }\n      doNext();\n    }\n\n    var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN doc_id';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN rev';\n      tx.executeSql(sql, [], function (tx) {\n        tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL, [], function (tx) {\n          var sql = 'SELECT hex(doc_id_rev) as hex FROM ' + BY_SEQ_STORE$1;\n          tx.executeSql(sql, [], function (tx, res) {\n            var rows = [];\n            for (var i = 0; i < res.rows.length; i++) {\n              rows.push(res.rows.item(i));\n            }\n            updateRows(rows);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we add the attach_and_seq table\n  // for issue #2818\n  function runMigration5(tx, callback) {\n\n    function migrateAttsAndSeqs(tx) {\n      // need to actually populate the table. this is the expensive part,\n      // so as an optimization, check first that this database even\n      // contains attachments\n      var sql = 'SELECT COUNT(*) AS cnt FROM ' + ATTACH_STORE$1;\n      tx.executeSql(sql, [], function (tx, res) {\n        var count = res.rows.item(0).cnt;\n        if (!count) {\n          return callback(tx);\n        }\n\n        var offset = 0;\n        var pageSize = 10;\n        function nextPage() {\n          var sql = select(\n            SELECT_DOCS + ', ' + DOC_STORE$1 + '.id AS id',\n            [DOC_STORE$1, BY_SEQ_STORE$1],\n            DOC_STORE_AND_BY_SEQ_JOINER,\n            null,\n            DOC_STORE$1 + '.id '\n          );\n          sql += ' LIMIT ' + pageSize + ' OFFSET ' + offset;\n          offset += pageSize;\n          tx.executeSql(sql, [], function (tx, res) {\n            if (!res.rows.length) {\n              return callback(tx);\n            }\n            var digestSeqs = {};\n            function addDigestSeq(digest, seq) {\n              // uniq digest/seq pairs, just in case there are dups\n              var seqs = digestSeqs[digest] = (digestSeqs[digest] || []);\n              if (seqs.indexOf(seq) === -1) {\n                seqs.push(seq);\n              }\n            }\n            for (var i = 0; i < res.rows.length; i++) {\n              var row = res.rows.item(i);\n              var doc = unstringifyDoc(row.data, row.id, row.rev);\n              var atts = Object.keys(doc._attachments || {});\n              for (var j = 0; j < atts.length; j++) {\n                var att = doc._attachments[atts[j]];\n                addDigestSeq(att.digest, row.seq);\n              }\n            }\n            var digestSeqPairs = [];\n            Object.keys(digestSeqs).forEach(function (digest) {\n              var seqs = digestSeqs[digest];\n              seqs.forEach(function (seq) {\n                digestSeqPairs.push([digest, seq]);\n              });\n            });\n            if (!digestSeqPairs.length) {\n              return nextPage();\n            }\n            var numDone = 0;\n            digestSeqPairs.forEach(function (pair) {\n              var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n                ' (digest, seq) VALUES (?,?)';\n              tx.executeSql(sql, pair, function () {\n                if (++numDone === digestSeqPairs.length) {\n                  nextPage();\n                }\n              });\n            });\n          });\n        }\n        nextPage();\n      });\n    }\n\n    var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n      ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n    tx.executeSql(attachAndRev, [], function (tx) {\n      tx.executeSql(\n        ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL, [], function (tx) {\n          tx.executeSql(\n            ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL, [],\n            migrateAttsAndSeqs);\n        });\n    });\n  }\n\n  // in this migration, we use escapeBlob() and unescapeBlob()\n  // instead of reading out the binary as HEX, which is slow\n  function runMigration6(tx, callback) {\n    var sql = 'ALTER TABLE ' + ATTACH_STORE$1 +\n      ' ADD COLUMN escaped TINYINT(1) DEFAULT 0';\n    tx.executeSql(sql, [], callback);\n  }\n\n  // issue #3136, in this migration we need a \"latest seq\" as well\n  // as the \"winning seq\" in the doc store\n  function runMigration7(tx, callback) {\n    var sql = 'ALTER TABLE ' + DOC_STORE$1 +\n      ' ADD COLUMN max_seq INTEGER';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'UPDATE ' + DOC_STORE$1 + ' SET max_seq=(SELECT MAX(seq) FROM ' +\n        BY_SEQ_STORE$1 + ' WHERE doc_id=id)';\n      tx.executeSql(sql, [], function (tx) {\n        // add unique index after filling, else we'll get a constraint\n        // error when we do the ALTER TABLE\n        var sql =\n          'CREATE UNIQUE INDEX IF NOT EXISTS \\'doc-max-seq-idx\\' ON ' +\n          DOC_STORE$1 + ' (max_seq)';\n        tx.executeSql(sql, [], callback);\n      });\n    });\n  }\n\n  function checkEncoding(tx, cb) {\n    // UTF-8 on chrome/android, UTF-16 on safari < 7.1\n    tx.executeSql('SELECT HEX(\"a\") AS hex', [], function (tx, res) {\n        var hex = res.rows.item(0).hex;\n        encoding = hex.length === 2 ? 'UTF-8' : 'UTF-16';\n        cb();\n      }\n    );\n  }\n\n  function onGetInstanceId() {\n    while (idRequests.length > 0) {\n      var idCallback = idRequests.pop();\n      idCallback(null, instanceId);\n    }\n  }\n\n  function onGetVersion(tx, dbVersion) {\n    if (dbVersion === 0) {\n      // initial schema\n\n      var meta = 'CREATE TABLE IF NOT EXISTS ' + META_STORE$1 +\n        ' (dbid, db_version INTEGER)';\n      var attach = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_STORE$1 +\n        ' (digest UNIQUE, escaped TINYINT(1), body BLOB)';\n      var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n        ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n      // TODO: migrate winningseq to INTEGER\n      var doc = 'CREATE TABLE IF NOT EXISTS ' + DOC_STORE$1 +\n        ' (id unique, json, winningseq, max_seq INTEGER UNIQUE)';\n      var seq = 'CREATE TABLE IF NOT EXISTS ' + BY_SEQ_STORE$1 +\n        ' (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ' +\n        'json, deleted TINYINT(1), doc_id, rev)';\n      var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n        ' (id UNIQUE, rev, json)';\n\n      // creates\n      tx.executeSql(attach);\n      tx.executeSql(local);\n      tx.executeSql(attachAndRev, [], function () {\n        tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL);\n        tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL);\n      });\n      tx.executeSql(doc, [], function () {\n        tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n        tx.executeSql(seq, [], function () {\n          tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n          tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL);\n          tx.executeSql(meta, [], function () {\n            // mark the db version, and new dbid\n            var initSeq = 'INSERT INTO ' + META_STORE$1 +\n              ' (db_version, dbid) VALUES (?,?)';\n            instanceId = uuid();\n            var initSeqArgs = [ADAPTER_VERSION$1, instanceId];\n            tx.executeSql(initSeq, initSeqArgs, function () {\n              onGetInstanceId();\n            });\n          });\n        });\n      });\n    } else { // version > 0\n\n      var setupDone = function () {\n        var migrated = dbVersion < ADAPTER_VERSION$1;\n        if (migrated) {\n          // update the db version within this transaction\n          tx.executeSql('UPDATE ' + META_STORE$1 + ' SET db_version = ' +\n            ADAPTER_VERSION$1);\n        }\n        // notify db.id() callers\n        var sql = 'SELECT dbid FROM ' + META_STORE$1;\n        tx.executeSql(sql, [], function (tx, result) {\n          instanceId = result.rows.item(0).dbid;\n          onGetInstanceId();\n        });\n      };\n\n      // would love to use promises here, but then websql\n      // ends the transaction early\n      var tasks = [\n        runMigration2,\n        runMigration3,\n        runMigration4,\n        runMigration5,\n        runMigration6,\n        runMigration7,\n        setupDone\n      ];\n\n      // run each migration sequentially\n      var i = dbVersion;\n      var nextMigration = function (tx) {\n        tasks[i - 1](tx, nextMigration);\n        i++;\n      };\n      nextMigration(tx);\n    }\n  }\n\n  function setup() {\n    db.transaction(function (tx) {\n      // first check the encoding\n      checkEncoding(tx, function () {\n        // then get the version\n        fetchVersion(tx);\n      });\n    }, websqlError(callback), dbCreated);\n  }\n\n  function fetchVersion(tx) {\n    var sql = 'SELECT sql FROM sqlite_master WHERE tbl_name = ' + META_STORE$1;\n    tx.executeSql(sql, [], function (tx, result) {\n      if (!result.rows.length) {\n        // database hasn't even been created yet (version 0)\n        onGetVersion(tx, 0);\n      } else if (!/db_version/.test(result.rows.item(0).sql)) {\n        // table was created, but without the new db_version column,\n        // so add it.\n        tx.executeSql('ALTER TABLE ' + META_STORE$1 +\n          ' ADD COLUMN db_version INTEGER', [], function () {\n          // before version 2, this column didn't even exist\n          onGetVersion(tx, 1);\n        });\n      } else { // column exists, we can safely get it\n        tx.executeSql('SELECT db_version FROM ' + META_STORE$1,\n          [], function (tx, result) {\n          var dbVersion = result.rows.item(0).db_version;\n          onGetVersion(tx, dbVersion);\n        });\n      }\n    });\n  }\n\n  setup();\n\n  function getMaxSeq(tx, callback) {\n    var sql = 'SELECT MAX(seq) AS seq FROM ' + BY_SEQ_STORE$1;\n    tx.executeSql(sql, [], function (tx, res) {\n      var updateSeq = res.rows.item(0).seq || 0;\n      callback(updateSeq);\n    });\n  }\n\n  function countDocs(tx, callback) {\n    // count the total rows\n    var sql = select(\n      'COUNT(' + DOC_STORE$1 + '.id) AS \\'num\\'',\n      [DOC_STORE$1, BY_SEQ_STORE$1],\n      DOC_STORE_AND_BY_SEQ_JOINER,\n      BY_SEQ_STORE$1 + '.deleted=0');\n\n    tx.executeSql(sql, [], function (tx, result) {\n      callback(result.rows.item(0).num);\n    });\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'websql';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, instanceId);\n  });\n\n  api._info = function (callback) {\n    var seq;\n    var docCount;\n    db.readTransaction(function (tx) {\n      getMaxSeq(tx, function (theSeq) {\n        seq = theSeq;\n      });\n      countDocs(tx, function (theDocCount) {\n        docCount = theDocCount;\n      });\n    }, websqlError(callback), function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: seq,\n        websql_encoding: encoding\n      });\n    });\n  };\n\n  api._bulkDocs = function (req, reqOpts, callback) {\n    websqlBulkDocs(opts, req, reqOpts, api, db, websqlChanges, callback);\n  };\n\n  function latest$$1(tx, id, rev$$1, callback, finish) {\n    var sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n    var sqlArgs = [id];\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var err = createError(MISSING_DOC, 'missing');\n        return finish(err);\n      }\n      var item = results.rows.item(0);\n      var metadata = safeJsonParse(item.metadata);\n      callback(latest(rev$$1, metadata));\n    });\n  }\n\n  api._get = function (id, opts, callback) {\n    var doc;\n    var metadata;\n    var tx = opts.ctx;\n    if (!tx) {\n      return db.readTransaction(function (txn) {\n        api._get(id, $inject_Object_assign({ctx: txn}, opts), callback);\n      });\n    }\n\n    function finish(err) {\n      callback(err, {doc: doc, metadata: metadata, ctx: tx});\n    }\n\n    var sql;\n    var sqlArgs;\n\n    if (!opts.rev) {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n      sqlArgs = [id];\n    } else if (opts.latest) {\n      latest$$1(tx, id, opts.rev, function (latestRev) {\n        opts.latest = false;\n        opts.rev = latestRev;\n        api._get(id, opts, callback);\n      }, finish);\n      return;\n    } else {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id',\n        [BY_SEQ_STORE$1 + '.doc_id=?', BY_SEQ_STORE$1 + '.rev=?']);\n      sqlArgs = [id, opts.rev];\n    }\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var missingErr = createError(MISSING_DOC, 'missing');\n        return finish(missingErr);\n      }\n      var item = results.rows.item(0);\n      metadata = safeJsonParse(item.metadata);\n      if (item.deleted && !opts.rev) {\n        var deletedErr = createError(MISSING_DOC, 'deleted');\n        return finish(deletedErr);\n      }\n      doc = unstringifyDoc(item.data, metadata.id, item.rev);\n      finish();\n    });\n  };\n\n  api._allDocs = function (opts, callback) {\n    var results = [];\n    var totalRows;\n    var updateSeq;\n\n    var start = 'startkey' in opts ? opts.startkey : false;\n    var end = 'endkey' in opts ? opts.endkey : false;\n    var key = 'key' in opts ? opts.key : false;\n    var keys = 'keys' in opts ? opts.keys : false;\n    var descending = 'descending' in opts ? opts.descending : false;\n    var limit = 'limit' in opts ? opts.limit : -1;\n    var offset = 'skip' in opts ? opts.skip : 0;\n    var inclusiveEnd = opts.inclusive_end !== false;\n    \n    var sqlArgs = [];\n    var criteria = [];\n\n    if (keys) {\n      var destinctKeys = [];\n      var bindingStr = \"\";\n      keys.forEach(function (key) {\n        if (destinctKeys.indexOf(key) === -1) {\n          destinctKeys.push(key);\n          bindingStr += '?,';\n        }\n      });\n      bindingStr = bindingStr.substring(0, bindingStr.length - 1); // keys is never empty\n      criteria.push(DOC_STORE$1 + '.id IN (' + bindingStr + ')');\n      sqlArgs = sqlArgs.concat(destinctKeys);\n    } else if (key !== false) {\n      criteria.push(DOC_STORE$1 + '.id = ?');\n      sqlArgs.push(key);\n    } else if (start !== false || end !== false) {\n      if (start !== false) {\n        criteria.push(DOC_STORE$1 + '.id ' + (descending ? '<=' : '>=') + ' ?');\n        sqlArgs.push(start);\n      }\n      if (end !== false) {\n        var comparator = descending ? '>' : '<';\n        if (inclusiveEnd) {\n          comparator += '=';\n        }\n        criteria.push(DOC_STORE$1 + '.id ' + comparator + ' ?');\n        sqlArgs.push(end);\n      }\n      if (key !== false) {\n        criteria.push(DOC_STORE$1 + '.id = ?');\n        sqlArgs.push(key);\n      }\n    }\n\n    if (!keys) {\n      // report deleted if keys are specified\n      criteria.push(BY_SEQ_STORE$1 + '.deleted = 0');\n    }\n\n    db.readTransaction(function (tx) {\n      // count the docs in parallel to other operations\n      countDocs(tx, function (docCount) {\n        totalRows = docCount;\n      });\n\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        // get max sequence in parallel to other operations\n        getMaxSeq(tx, function (theSeq) {\n          updateSeq = theSeq;\n        });\n      }\n\n      if (limit === 0) {\n        return;\n      }\n\n      // do a single query to fetch the documents\n      var sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        criteria,\n        DOC_STORE$1 + '.id ' + (descending ? 'DESC' : 'ASC')\n        );\n      sql += ' LIMIT ' + limit + ' OFFSET ' + offset;\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        for (var i = 0, l = result.rows.length; i < l; i++) {\n          var item = result.rows.item(i);\n          var metadata = safeJsonParse(item.metadata);\n          var id = metadata.id;\n          var data = unstringifyDoc(item.data, id, item.rev);\n          var winningRev$$1 = data._rev;\n          var doc = {\n            id: id,\n            key: id,\n            value: {rev: winningRev$$1}\n          };\n          if (opts.include_docs) {\n            doc.doc = data;\n            doc.doc._rev = winningRev$$1;\n            if (opts.conflicts) {\n              var conflicts = collectConflicts(metadata);\n              if (conflicts.length) {\n                doc.doc._conflicts = conflicts;\n              }\n            }\n            fetchAttachmentsIfNecessary$1(doc.doc, opts, api, tx);\n          }\n          if (item.deleted) {\n            if (keys) {\n              doc.value.deleted = true;\n              doc.doc = null;\n            } else {\n              // propably should not happen\n              continue;\n            }\n          }\n          if (!keys) {\n            results.push(doc);\n          } else {\n            var index = keys.indexOf(id, index);\n            do {\n              results[index] = doc;\n              index = keys.indexOf(id, index + 1);\n            } while (index > -1 && index < keys.length);\n          }\n        }\n        if (keys) {\n          keys.forEach(function (key, index) {\n            if (!results[index]) {\n              results[index] = {key: key, error: 'not_found'};\n            }\n          });\n        }\n      });\n    }, websqlError(callback), function () {\n      var returnVal = {\n        total_rows: totalRows,\n        offset: opts.skip,\n        rows: results\n      };\n\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        returnVal.update_seq = updateSeq;\n      }\n      callback(null, returnVal);\n    });\n  };\n\n  api._changes = function (opts) {\n    opts = clone(opts);\n\n    if (opts.continuous) {\n      var id = api._name + ':' + uuid();\n      websqlChanges.addListener(api._name, id, api, opts);\n      websqlChanges.notify(api._name);\n      return {\n        cancel: function () {\n          websqlChanges.removeListener(api._name, id);\n        }\n      };\n    }\n\n    var descending = opts.descending;\n\n    // Ignore the `since` parameter when `descending` is true\n    opts.since = opts.since && !descending ? opts.since : 0;\n\n    var limit = 'limit' in opts ? opts.limit : -1;\n    if (limit === 0) {\n      limit = 1; // per CouchDB _changes spec\n    }\n\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    var results = [];\n    var numResults = 0;\n\n    function fetchChanges() {\n\n      var selectStmt =\n        DOC_STORE$1 + '.json AS metadata, ' +\n        DOC_STORE$1 + '.max_seq AS maxSeq, ' +\n        BY_SEQ_STORE$1 + '.json AS winningDoc, ' +\n        BY_SEQ_STORE$1 + '.rev AS winningRev ';\n\n      var from = DOC_STORE$1 + ' JOIN ' + BY_SEQ_STORE$1;\n\n      var joiner = DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id' +\n        ' AND ' + DOC_STORE$1 + '.winningseq=' + BY_SEQ_STORE$1 + '.seq';\n\n      var criteria = ['maxSeq > ?'];\n      var sqlArgs = [opts.since];\n\n      if (opts.doc_ids) {\n        criteria.push(DOC_STORE$1 + '.id IN ' + qMarks(opts.doc_ids.length));\n        sqlArgs = sqlArgs.concat(opts.doc_ids);\n      }\n\n      var orderBy = 'maxSeq ' + (descending ? 'DESC' : 'ASC');\n\n      var sql = select(selectStmt, from, joiner, criteria, orderBy);\n\n      var filter = filterChange(opts);\n      if (!opts.view && !opts.filter) {\n        // we can just limit in the query\n        sql += ' LIMIT ' + limit;\n      }\n\n      var lastSeq = opts.since || 0;\n      db.readTransaction(function (tx) {\n        tx.executeSql(sql, sqlArgs, function (tx, result) {\n          function reportChange(change) {\n            return function () {\n              opts.onChange(change);\n            };\n          }\n          for (var i = 0, l = result.rows.length; i < l; i++) {\n            var item = result.rows.item(i);\n            var metadata = safeJsonParse(item.metadata);\n            lastSeq = item.maxSeq;\n\n            var doc = unstringifyDoc(item.winningDoc, metadata.id,\n              item.winningRev);\n            var change = opts.processChange(doc, metadata, opts);\n            change.seq = item.maxSeq;\n\n            var filtered = filter(change);\n            if (typeof filtered === 'object') {\n              return opts.complete(filtered);\n            }\n\n            if (filtered) {\n              numResults++;\n              if (returnDocs) {\n                results.push(change);\n              }\n              // process the attachment immediately\n              // for the benefit of live listeners\n              if (opts.attachments && opts.include_docs) {\n                fetchAttachmentsIfNecessary$1(doc, opts, api, tx,\n                  reportChange(change));\n              } else {\n                reportChange(change)();\n              }\n            }\n            if (numResults === limit) {\n              break;\n            }\n          }\n        });\n      }, websqlError(opts.complete), function () {\n        if (!opts.continuous) {\n          opts.complete(null, {\n            results: results,\n            last_seq: lastSeq\n          });\n        }\n      });\n    }\n\n    fetchChanges();\n  };\n\n  api._close = function (callback) {\n    //WebSQL databases do not need to be closed\n    callback();\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var res;\n    var tx = opts.ctx;\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n    var sql = 'SELECT escaped, ' +\n      'CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM ' +\n      ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      // websql has a bug where \\u0000 causes early truncation in strings\n      // and blobs. to work around this, we used to use the hex() function,\n      // but that's not performant. after migration 6, we remove \\u0000\n      // and add it back in afterwards\n      var item = result.rows.item(0);\n      var data = item.escaped ? unescapeBlob(item.body) :\n        parseHexString(item.body, encoding);\n      if (opts.binary) {\n        res = binStringToBluffer(data, type);\n      } else {\n        res = thisBtoa(data);\n      }\n      callback(null, res);\n    });\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        if (!result.rows.length) {\n          callback(createError(MISSING_DOC));\n        } else {\n          var data = safeJsonParse(result.rows.item(0).metadata);\n          callback(null, data.rev_tree);\n        }\n      });\n    });\n  };\n\n  api._doCompaction = function (docId, revs, callback) {\n    if (!revs.length) {\n      return callback();\n    }\n    db.transaction(function (tx) {\n\n      // update doc store\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        var metadata = safeJsonParse(result.rows.item(0).metadata);\n        traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                           revHash, ctx, opts) {\n          var rev$$1 = pos + '-' + revHash;\n          if (revs.indexOf(rev$$1) !== -1) {\n            opts.status = 'missing';\n          }\n        });\n\n        var sql = 'UPDATE ' + DOC_STORE$1 + ' SET json = ? WHERE id = ?';\n        tx.executeSql(sql, [safeJsonStringify(metadata), docId]);\n      });\n\n      compactRevs$1(revs, docId, tx);\n    }, websqlError(callback), function () {\n      callback();\n    });\n  };\n\n  api._getLocal = function (id, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json, rev FROM ' + LOCAL_STORE$1 + ' WHERE id=?';\n      tx.executeSql(sql, [id], function (tx, res) {\n        if (res.rows.length) {\n          var item = res.rows.item(0);\n          var doc = unstringifyDoc(item.json, id, item.rev);\n          callback(null, doc);\n        } else {\n          callback(createError(MISSING_DOC));\n        }\n      });\n    });\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    var newRev;\n    if (!oldRev) {\n      newRev = doc._rev = '0-1';\n    } else {\n      newRev = doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n    var json = stringifyDoc(doc);\n\n    var ret;\n    function putLocal(tx) {\n      var sql;\n      var values;\n      if (oldRev) {\n        sql = 'UPDATE ' + LOCAL_STORE$1 + ' SET rev=?, json=? ' +\n          'WHERE id=? AND rev=?';\n        values = [newRev, json, id, oldRev];\n      } else {\n        sql = 'INSERT INTO ' + LOCAL_STORE$1 + ' (id, rev, json) VALUES (?,?,?)';\n        values = [id, newRev, json];\n      }\n      tx.executeSql(sql, values, function (tx, res) {\n        if (res.rowsAffected) {\n          ret = {ok: true, id: id, rev: newRev};\n          if (opts.ctx) { // return immediately\n            callback(null, ret);\n          }\n        } else {\n          callback(createError(REV_CONFLICT));\n        }\n      }, function () {\n        callback(createError(REV_CONFLICT));\n        return false; // ack that we handled the error\n      });\n    }\n\n    if (opts.ctx) {\n      putLocal(opts.ctx);\n    } else {\n      db.transaction(putLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var ret;\n\n    function removeLocal(tx) {\n      var sql = 'DELETE FROM ' + LOCAL_STORE$1 + ' WHERE id=? AND rev=?';\n      var params = [doc._id, doc._rev];\n      tx.executeSql(sql, params, function (tx, res) {\n        if (!res.rowsAffected) {\n          return callback(createError(MISSING_DOC));\n        }\n        ret = {ok: true, id: doc._id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      });\n    }\n\n    if (opts.ctx) {\n      removeLocal(opts.ctx);\n    } else {\n      db.transaction(removeLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._destroy = function (opts, callback) {\n    websqlChanges.removeAllListeners(api._name);\n    db.transaction(function (tx) {\n      var stores = [DOC_STORE$1, BY_SEQ_STORE$1, ATTACH_STORE$1, META_STORE$1,\n        LOCAL_STORE$1, ATTACH_AND_SEQ_STORE$1];\n      stores.forEach(function (store) {\n        tx.executeSql('DROP TABLE IF EXISTS ' + store, []);\n      });\n    }, websqlError(callback), function () {\n      if (hasLocalStorage()) {\n        delete window.localStorage['_pouch__websqldb_' + api._name];\n        delete window.localStorage[api._name];\n      }\n      callback(null, {'ok': true});\n    });\n  };\n}\n\nfunction canOpenTestDB() {\n  try {\n    openDatabase('_pouch_validate_websql', 1, '', 1);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\n// WKWebView had a bug where WebSQL would throw a DOM Exception 18\n// (see https://bugs.webkit.org/show_bug.cgi?id=137760 and\n// https://github.com/pouchdb/pouchdb/issues/5079)\n// This has been fixed in latest WebKit, so we try to detect it here.\nfunction isValidWebSQL() {\n  // WKWebView UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 9_2 like Mac OS X)\n  //   AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13C75\n  // Chrome for iOS UA:\n  //   Mozilla/5.0 (iPhone; U; CPU iPhone OS 5_1_1 like Mac OS X; en)\n  //   AppleWebKit/534.46.0 (KHTML, like Gecko) CriOS/19.0.1084.60\n  //   Mobile/9B206 Safari/7534.48.3\n  // Firefox for iOS UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4\n  //   (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/600.1.4\n\n  // indexedDB is null on some UIWebViews and undefined in others\n  // see: https://bugs.webkit.org/show_bug.cgi?id=137034\n  if (typeof indexedDB === 'undefined' || indexedDB === null ||\n      !/iP(hone|od|ad)/.test(navigator.userAgent)) {\n    // definitely not WKWebView, avoid creating an unnecessary database\n    return true;\n  }\n  // Cache the result in LocalStorage. Reason we do this is because if we\n  // call openDatabase() too many times, Safari craps out in SauceLabs and\n  // starts throwing DOM Exception 14s.\n  var hasLS = hasLocalStorage();\n  // Include user agent in the hash, so that if Safari is upgraded, we don't\n  // continually think it's broken.\n  var localStorageKey = '_pouch__websqldb_valid_' + navigator.userAgent;\n  if (hasLS && localStorage[localStorageKey]) {\n    return localStorage[localStorageKey] === '1';\n  }\n  var openedTestDB = canOpenTestDB();\n  if (hasLS) {\n    localStorage[localStorageKey] = openedTestDB ? '1' : '0';\n  }\n  return openedTestDB;\n}\n\nfunction valid() {\n  if (typeof openDatabase !== 'function') {\n    return false;\n  }\n  return isValidWebSQL();\n}\n\nfunction openDB$2(name, version, description, size) {\n  // Traditional WebSQL API\n  return openDatabase(name, version, description, size);\n}\n\nfunction WebSQLPouch(opts, callback) {\n  var msg = 'WebSQL is deprecated and will be removed in future releases of PouchDB. ' +\n      'Please migrate to IndexedDB: https://pouchdb.com/2018/01/23/pouchdb-6.4.2.html';\n  guardedConsole('warn', msg);\n  var _opts = $inject_Object_assign({\n    websql: openDB$2\n  }, opts);\n\n  WebSqlPouch.call(this, _opts, callback);\n}\n\nWebSQLPouch.valid = valid;\n\nWebSQLPouch.use_prefix = true;\n\nfunction WebSqlPouch$1 (PouchDB) {\n  PouchDB.adapter('websql', WebSQLPouch, true);\n}\n\n/* global fetch */\n/* global Headers */\nfunction wrappedFetch() {\n  var wrappedPromise = {};\n\n  var promise = new PouchPromise(function (resolve, reject) {\n    wrappedPromise.resolve = resolve;\n    wrappedPromise.reject = reject;\n  });\n\n  var args = new Array(arguments.length);\n\n  for (var i = 0; i < args.length; i++) {\n    args[i] = arguments[i];\n  }\n\n  wrappedPromise.promise = promise;\n\n  PouchPromise.resolve().then(function () {\n    return fetch.apply(null, args);\n  }).then(function (response) {\n    wrappedPromise.resolve(response);\n  }).catch(function (error) {\n    wrappedPromise.reject(error);\n  });\n\n  return wrappedPromise;\n}\n\nfunction fetchRequest(options, callback) {\n  var wrappedPromise, timer, response;\n\n  var headers = new Headers();\n\n  var fetchOptions = {\n    method: options.method,\n    credentials: 'include',\n    headers: headers\n  };\n\n  if (options.json) {\n    headers.set('Accept', 'application/json');\n    headers.set('Content-Type', options.headers['Content-Type'] ||\n      'application/json');\n  }\n\n  if (options.body &&\n      options.processData &&\n      typeof options.body !== 'string') {\n    fetchOptions.body = JSON.stringify(options.body);\n  } else if ('body' in options) {\n    fetchOptions.body = options.body;\n  } else {\n    fetchOptions.body = null;\n  }\n\n  Object.keys(options.headers).forEach(function (key) {\n    if (options.headers.hasOwnProperty(key)) {\n      headers.set(key, options.headers[key]);\n    }\n  });\n\n  wrappedPromise = wrappedFetch(options.url, fetchOptions);\n\n  if (options.timeout > 0) {\n    timer = setTimeout(function () {\n      wrappedPromise.reject(new Error('Load timeout for resource: ' +\n        options.url));\n    }, options.timeout);\n  }\n\n  wrappedPromise.promise.then(function (fetchResponse) {\n    response = {\n      statusCode: fetchResponse.status\n    };\n\n    if (options.timeout > 0) {\n      clearTimeout(timer);\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      return options.binary ? fetchResponse.blob() : fetchResponse.text();\n    }\n\n    return fetchResponse.json();\n  }).then(function (result) {\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      callback(null, response, result);\n    } else {\n      result.status = response.statusCode;\n      callback(result);\n    }\n  }).catch(function (error) {\n    if (!error) {\n      // this happens when the listener is canceled\n      error = new Error('canceled');\n    }\n    callback(error);\n  });\n\n  return {abort: wrappedPromise.reject};\n}\n\nfunction xhRequest(options, callback) {\n\n  var xhr, timer;\n  var timedout = false;\n\n  var abortReq = function () {\n    xhr.abort();\n    cleanUp();\n  };\n\n  var timeoutReq = function () {\n    timedout = true;\n    xhr.abort();\n    cleanUp();\n  };\n\n  var ret = {abort: abortReq};\n\n  var cleanUp = function () {\n    clearTimeout(timer);\n    ret.abort = function () {};\n    if (xhr) {\n      xhr.onprogress = undefined;\n      if (xhr.upload) {\n        xhr.upload.onprogress = undefined;\n      }\n      xhr.onreadystatechange = undefined;\n      xhr = undefined;\n    }\n  };\n\n  if (options.xhr) {\n    xhr = new options.xhr();\n  } else {\n    xhr = new XMLHttpRequest();\n  }\n\n  try {\n    xhr.open(options.method, options.url);\n  } catch (exception) {\n    return callback(new Error(exception.name || 'Url is invalid'));\n  }\n\n  xhr.withCredentials = ('withCredentials' in options) ?\n    options.withCredentials : true;\n\n  if (options.method === 'GET') {\n    delete options.headers['Content-Type'];\n  } else if (options.json) {\n    options.headers.Accept = 'application/json';\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n    if (options.body &&\n        options.processData &&\n        typeof options.body !== \"string\") {\n      options.body = JSON.stringify(options.body);\n    }\n  }\n\n  if (options.binary) {\n    xhr.responseType = 'arraybuffer';\n  }\n\n  if (!('body' in options)) {\n    options.body = null;\n  }\n\n  for (var key in options.headers) {\n    if (options.headers.hasOwnProperty(key)) {\n      xhr.setRequestHeader(key, options.headers[key]);\n    }\n  }\n\n  if (options.timeout > 0) {\n    timer = setTimeout(timeoutReq, options.timeout);\n    xhr.onprogress = function () {\n      clearTimeout(timer);\n      if (xhr.readyState !== 4) {\n        timer = setTimeout(timeoutReq, options.timeout);\n      }\n    };\n    if (typeof xhr.upload !== 'undefined') { // does not exist in ie9\n      xhr.upload.onprogress = xhr.onprogress;\n    }\n  }\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    var response = {\n      statusCode: xhr.status\n    };\n\n    if (xhr.status >= 200 && xhr.status < 300) {\n      var data;\n      if (options.binary) {\n        data = createBlob([xhr.response || ''], {\n          type: xhr.getResponseHeader('Content-Type')\n        });\n      } else {\n        data = xhr.responseText;\n      }\n      callback(null, response, data);\n    } else {\n      var err = {};\n      if (timedout) {\n        err = new Error('ETIMEDOUT');\n        err.code = 'ETIMEDOUT';\n      } else if (typeof xhr.response === 'string' && xhr.response !== '') {\n        try {\n          err = JSON.parse(xhr.response);\n        } catch (e) {}\n      }\n\n      err.status = xhr.status;\n\n      callback(err);\n    }\n    cleanUp();\n  };\n\n  if (options.body && (options.body instanceof Blob)) {\n    readAsArrayBuffer(options.body, function (arrayBuffer) {\n      xhr.send(arrayBuffer);\n    });\n  } else {\n    xhr.send(options.body);\n  }\n\n  return ret;\n}\n\nfunction testXhr() {\n  try {\n    new XMLHttpRequest();\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nvar hasXhr = testXhr();\n\nfunction ajax(options, callback) {\n  if (!false && (hasXhr || options.xhr)) {\n    return xhRequest(options, callback);\n  } else {\n    return fetchRequest(options, callback);\n  }\n}\n\n// the blob already has a type; do nothing\n\nfunction defaultBody() {\n  return '';\n}\n\nfunction ajaxCore(options, callback) {\n\n  options = clone(options);\n\n  var defaultOptions = {\n    method : \"GET\",\n    headers: {},\n    json: true,\n    processData: true,\n    timeout: 10000,\n    cache: false\n  };\n\n  options = $inject_Object_assign(defaultOptions, options);\n\n  function onSuccess(obj, resp, cb) {\n    if (!options.binary && options.json && typeof obj === 'string') {\n      /* istanbul ignore next */\n      try {\n        obj = JSON.parse(obj);\n      } catch (e) {\n        // Probably a malformed JSON from server\n        return cb(e);\n      }\n    }\n    if (Array.isArray(obj)) {\n      obj = obj.map(function (v) {\n        if (v.error || v.missing) {\n          return generateErrorFromResponse(v);\n        } else {\n          return v;\n        }\n      });\n    }\n    if (options.binary) {\n      \n    }\n    cb(null, obj, resp);\n  }\n\n  if (options.json) {\n    if (!options.binary) {\n      options.headers.Accept = 'application/json';\n    }\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n  }\n\n  if (options.binary) {\n    options.encoding = null;\n    options.json = false;\n  }\n\n  if (!options.processData) {\n    options.json = false;\n  }\n\n  return ajax(options, function (err, response, body) {\n\n    if (err) {\n      return callback(generateErrorFromResponse(err));\n    }\n\n    var error;\n    var content_type = response.headers && response.headers['content-type'];\n    var data = body || defaultBody();\n\n    // CouchDB doesn't always return the right content-type for JSON data, so\n    // we check for ^{ and }$ (ignoring leading/trailing whitespace)\n    if (!options.binary && (options.json || !options.processData) &&\n        typeof data !== 'object' &&\n        (/json/.test(content_type) ||\n         (/^[\\s]*\\{/.test(data) && /\\}[\\s]*$/.test(data)))) {\n      try {\n        data = JSON.parse(data.toString());\n      } catch (e) {}\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      onSuccess(data, response, callback);\n    } else {\n      error = generateErrorFromResponse(data);\n      error.status = response.statusCode;\n      callback(error);\n    }\n  });\n}\n\nfunction ajax$1(opts, callback) {\n\n  // cache-buster, specifically designed to work around IE's aggressive caching\n  // see http://www.dashbay.com/2011/05/internet-explorer-caches-ajax/\n  // Also Safari caches POSTs, so we need to cache-bust those too.\n  var ua = (navigator && navigator.userAgent) ?\n    navigator.userAgent.toLowerCase() : '';\n\n  var isSafari = ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1;\n  var isIE = ua.indexOf('msie') !== -1;\n  var isTrident = ua.indexOf('trident') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n\n  // it appears the new version of safari also caches GETs,\n  // see https://github.com/pouchdb/pouchdb/issues/5010\n  var shouldCacheBust = (isSafari ||\n    ((isIE || isTrident || isEdge) && opts.method === 'GET'));\n\n  var cache = 'cache' in opts ? opts.cache : true;\n\n  var isBlobUrl = /^blob:/.test(opts.url); // don't append nonces for blob URLs\n\n  if (!isBlobUrl && (shouldCacheBust || !cache)) {\n    var hasArgs = opts.url.indexOf('?') !== -1;\n    opts.url += (hasArgs ? '&' : '?') + '_nonce=' + Date.now();\n  }\n\n  return ajaxCore(opts, callback);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\n\nfunction pool(promiseFactories, limit) {\n  return new PouchPromise(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\nvar CHANGES_TIMEOUT_BUFFER = 5000;\nvar DEFAULT_HEARTBEAT = 10000;\n\nvar supportsBulkGetMap = {};\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var doc = row.doc || row.ok;\n  var atts = doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$2(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return PouchPromise.resolve();\n  }\n\n  return PouchPromise.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new PouchPromise(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n\n  var protocol = parseUri(opts.prefix).protocol;\n\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    name = opts.prefix + encodeURIComponent(dbName);\n  }\n\n  // Prase the URI into all its little bits\n  var uri = parseUri(name);\n\n  // Store the user and password as a separate auth object\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  // Store the first part as the database name and remove it from the parts\n  // array\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  // Restore the path by joining all the remaining parts (all the parts\n  // except for the database name) with '/'s\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n  var ajaxOpts = opts.ajax || {};\n\n  if (opts.auth || host.auth) {\n    var nAuth = opts.auth || host.auth;\n    var str = nAuth.username + ':' + nAuth.password;\n    var token = thisBtoa(unescape(encodeURIComponent(str)));\n    ajaxOpts.headers = ajaxOpts.headers || {};\n    ajaxOpts.headers.Authorization = 'Basic ' + token;\n  }\n\n  // Not strictly necessary, but we do this because numerous tests\n  // rely on swapping ajax in and out.\n  api._ajax = ajax$1;\n\n  function ajax(userOpts, options, callback) {\n    var reqAjax = (userOpts || {}).ajax || {};\n    var reqOpts = $inject_Object_assign(clone(ajaxOpts), reqAjax, options);\n    var defaultHeaders = clone(ajaxOpts.headers || {});\n    reqOpts.headers = $inject_Object_assign(defaultHeaders, reqAjax.headers,\n      options.headers || {});\n    /* istanbul ignore if */\n    if (api.constructor.listeners('debug').length) {\n      api.constructor.emit('debug', ['http', reqOpts.method, reqOpts.url]);\n    }\n    return api._ajax(reqOpts, callback);\n  }\n\n  function ajaxPromise(userOpts, opts) {\n    return new PouchPromise(function (resolve, reject) {\n      ajax(userOpts, opts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    }));\n  }\n\n  var setupPromise;\n\n  function setup() {\n    // TODO: Remove `skipSetup` in favor of `skip_setup` in a future release\n    if (opts.skipSetup || opts.skip_setup) {\n      return PouchPromise.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    var checkExists = {method: 'GET', url: dbUrl};\n    setupPromise = ajaxPromise({}, checkExists).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return ajaxPromise({}, {method: 'PUT', url: dbUrl});\n      } else {\n        return PouchPromise.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return PouchPromise.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  nextTick(function () {\n    callback(null, api);\n  });\n\n  api._remote = true;\n  /* istanbul ignore next */\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$1('id', function (callback) {\n    ajax({}, {method: 'GET', url: genUrl(host, '')}, function (err, result) {\n      var uuid$$1 = (result && result.uuid) ?\n        (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    });\n  });\n\n  api.request = adapterFun$$1('request', function (options, callback) {\n    options.url = genDBUrl(host, options.url);\n    ajax({}, options, callback);\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n    ajax(opts, {\n      url: genDBUrl(host, '_compact'),\n      method: 'POST'\n    }, function () {\n      function ping() {\n        api.info(function (err, res) {\n          // CouchDB may send a \"compact_running:true\" if it's\n          // already compacting. PouchDB Server doesn't.\n          /* istanbul ignore else */\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      ajax(opts, {\n        url: genDBUrl(host, '_bulk_get' + paramsToStr(params)),\n        method: 'POST',\n        body: { docs: opts.docs}\n      }, function (err, result) {\n        if (!err && opts.attachments && opts.binary) {\n          result.results.forEach(function (res) {\n            res.docs.forEach(readAttachmentsAsBlobOrBuffer);\n          });\n        }\n        cb(err, result);\n      });\n    }\n\n    /* istanbul ignore next */\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'binary', 'latest']);\n        subOpts.ajax = ajaxOpts;\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    /* istanbul ignore next */\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(\n            err.status,\n            'PouchDB is just detecting if the remote ' +\n            'supports the _bulk_get API.'\n          );\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      ajax({}, {\n        method: 'GET',\n        url: genDBUrl(host, '')\n      }, function (err, res) {\n        /* istanbul ignore next */\n        if (err) {\n        return callback(err);\n        }\n        res.host = genDBUrl(host, '');\n        callback(null, res);\n      });\n    }).catch(callback);\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = opts.update_seq;\n    }\n\n    id = encodeDocId(id);\n\n    // Set the options for the ajax call\n    var options = {\n      method: 'GET',\n      url: genDBUrl(host, id + paramsToStr(params))\n    };\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetch(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n          '?rev=' + doc._rev;\n        return ajaxPromise(opts, {\n          method: 'GET',\n          url: genDBUrl(host, path),\n          binary: true\n        }).then(function (blob) {\n          if (opts.binary) {\n            return blob;\n          }\n          return new PouchPromise(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetch(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return PouchPromise.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    ajaxPromise(opts, options).then(function (res) {\n      return PouchPromise.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res);\n        }\n      }).then(function () {\n        callback(null, res);\n      });\n    }).catch(function (e) {\n      e.docId = id;\n      callback(e);\n    });\n  });\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$1('remove',\n      function (docOrId, optsOrRev, opts, callback) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        callback = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        callback = optsOrRev;\n        opts = {};\n      } else {\n        callback = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev$$1 = (doc._rev || opts.rev);\n\n    // Delete the document\n    ajax(opts, {\n      method: 'DELETE',\n      url: genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev$$1\n    }, callback);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment =\n    adapterFun$$1('getAttachment', function (docId, attachmentId, opts,\n                                                callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n      encodeAttachmentId(attachmentId) + params;\n    ajax(opts, {\n      method: 'GET',\n      url: url,\n      binary: true\n    }, callback);\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =\n    adapterFun$$1('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                   callback) {\n\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n      encodeAttachmentId(attachmentId)) + '?rev=' + rev$$1;\n\n    ajax({}, {\n      method: 'DELETE',\n      url: url\n    }, callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment =\n    adapterFun$$1('putAttachment', function (docId, attachmentId, rev$$1, blob,\n                                                type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev$$1;\n      rev$$1 = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev$$1) {\n      url += '?rev=' + rev$$1;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = thisAtob(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    var opts = {\n      headers: {'Content-Type': type},\n      method: 'PUT',\n      url: url,\n      processData: false,\n      body: blob,\n      timeout: ajaxOpts.timeout || 60000\n    };\n    // Add the attachment\n    ajax({}, opts, callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return PouchPromise.all(req.docs.map(preprocessAttachments$2));\n    }).then(function () {\n      // Update/create the documents\n      ajax(opts, {\n        method: 'POST',\n        url: genDBUrl(host, '_bulk_docs'),\n        timeout: opts.timeout,\n        body: req\n      }, function (err, results) {\n        if (err) {\n          return callback(err);\n        }\n        results.forEach(function (result) {\n          result.ok = true; // smooths out cloudant not adding this\n        });\n        callback(null, results);\n      });\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$2(doc);\n    }).then(function () {\n      // Update/create the document\n      ajax(opts, {\n        method: 'PUT',\n        url: genDBUrl(host, encodeDocId(doc._id)),\n        body: doc\n      }, function (err, result) {\n        if (err) {\n          err.docId = doc && doc._id;\n          return callback(err);\n        }\n        callback(null, result);\n      });\n    }).catch(callback);\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    // Get the document listing\n    ajaxPromise(opts, {\n      method: method,\n      url: genDBUrl(host, '_all_docs' + paramStr),\n      body: body\n    }).then(function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        res.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, res);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n\n    if (opts.continuous && !('heartbeat' in opts)) {\n      opts.heartbeat = DEFAULT_HEARTBEAT;\n    }\n\n    var requestTimeout = ('timeout' in opts) ? opts.timeout :\n      ('timeout' in ajaxOpts) ? ajaxOpts.timeout :\n      30 * 1000;\n\n    // ensure CHANGES_TIMEOUT_BUFFER applies\n    if ('timeout' in opts && opts.timeout &&\n      (requestTimeout - opts.timeout) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    if ('heartbeat' in opts && opts.heartbeat &&\n       (requestTimeout - opts.heartbeat) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    var params = {};\n    if ('timeout' in opts && opts.timeout) {\n      params.timeout = opts.timeout;\n    }\n\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    //\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.seq_interval) {\n      params.seq_interval = opts.seq_interval;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n    \n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n    /* istanbul ignore next */\n    else if (opts.selector) {\n      // set this automagically for the user, similar to above\n      params.filter = '_selector';\n      method = 'POST';\n      body = {selector: opts.selector };\n    }\n\n    var xhr;\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetch = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Coudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var xhrOpts = {\n        method: method,\n        url: genDBUrl(host, '_changes' + paramsToStr(params)),\n        timeout: requestTimeout,\n        body: body\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        xhr = ajax(opts, xhrOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        var pending = null;\n        var lastSeq = null;\n        // Attach 'pending' property if server supports it (CouchDB 2.0+)\n        /* istanbul ignore if */\n        if (typeof res.pending === 'number') {\n          pending = res.pending;\n        }\n        if (typeof results.last_seq === 'string' || typeof results.last_seq === 'number') {\n          lastSeq = results.last_seq;\n        }\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (returnDocs) {\n              results.results.push(c);\n            }\n            opts.onChange(c, pending, lastSeq);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        nextTick(function () { fetch(lastFetchedSeq, fetched); });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetch(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        if (xhr) {\n          xhr.abort();\n        }\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    ajax(opts, {\n      method: 'POST',\n      url: genDBUrl(host, '_revs_diff'),\n      body: req\n    }, callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    ajax(options, {\n      url: genDBUrl(host, ''),\n      method: 'DELETE'\n    }, function (err, resp) {\n      if (err && err.status && err.status !== 404) {\n        return callback(err);\n      }\n      callback(null, resp);\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nfunction HttpPouch$1 (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n}\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      nextTick(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      nextTick(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopeEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue$2() {\n  this.promise = new PouchPromise(function (fulfill) {fulfill(); });\n}\nTaskQueue$2.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$2.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$2();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e);\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e);\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new QueryParseError('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n    addHttpParam('update_seq', opts, params);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.request({\n        method: method,\n        url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n        body: body\n      }).then(\n        /* istanbul ignore next */\n        function (result) {\n          // fail the entire request if the result contains an error\n          result.rows.forEach(function (row) {\n            if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n              throw new Error(row.reason);\n            }\n          });\n\n          return result;\n      })\n      .then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n    return db.request({\n      method: 'POST',\n      url: '_temp_view' + params,\n      body: body\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new PouchPromise(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new PouchPromise(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return PouchPromise.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return PouchPromise.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new ExportedSet();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n        return PouchPromise.all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = flatten(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue$2();\n    }\n    return queue;\n  }\n\n  function updateView(view) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue$2();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE$1\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n      if (results.length < CHANGES_BATCH_SIZE$1) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new ExportedMap();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new ExportedMap();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        finalResults.update_seq = view.seq;\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new ExportedMap();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        /* istanbul ignore if */\n        if (opts.update_seq) {\n          viewOpts.update_seq = true;\n        }\n        return fetchFromView(viewOpts);\n      });\n      return PouchPromise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        viewOpts.update_seq = true;\n      }\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([startkey, {}]) :\n          toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.request({\n      method: 'POST',\n      url: '_view_cleanup'\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new ExportedMap();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new ExportedSet();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : mapToKeysArray(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return PouchPromise.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n    \n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              nextTick(function () {\n                updateView(view);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = PouchPromise.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction getBuiltIn(reduceFunString) {\n  if (/^_sum/.test(reduceFunString)) {\n    return builtInReduce._sum;\n  } else if (/^_count/.test(reduceFunString)) {\n    return builtInReduce._count;\n  } else if (/^_stats/.test(reduceFunString)) {\n    return builtInReduce._stats;\n  } else if (/^_/.test(reduceFunString)) {\n    throw new Error(reduceFunString + ' is not a supported reduce function.');\n  }\n}\n\nfunction mapper(mapFun, emit) {\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n    var origMap = mapFun;\n    return function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    return evalFunctionWithEval(mapFun.toString(), emit);\n  }\n}\n\nfunction reducer(reduceFun) {\n  var reduceFunString = reduceFun.toString();\n  var builtIn = getBuiltIn(reduceFunString);\n  if (builtIn) {\n    return builtIn;\n  } else {\n    return evalFunctionWithEval(reduceFunString);\n  }\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var fun = ddoc.views && ddoc.views[viewName];\n  if (typeof fun.map !== 'string') {\n    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' +\n      viewName + ', instead found object of type: ' + typeof fun.map);\n  }\n}\n\nvar localDocName = 'mrviews';\nvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\n\nfunction query(fun, opts, callback) {\n  return abstract.query.call(this, fun, opts, callback);\n}\n\nfunction viewCleanup(callback) {\n  return abstract.viewCleanup.call(this, callback);\n}\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev$$1) {\n  return /^1-/.test(rev$$1);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return PouchPromise.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return PouchPromise.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return PouchPromise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return PouchPromise.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc)\n                   .then(function (attachments) {\n                           var filenames = Object.keys(remoteDoc._attachments);\n                           attachments\n                             .forEach(function (attachment, i) {\n                                        var att = remoteDoc._attachments[filenames[i]];\n                                        delete att.stub;\n                                        delete att.length;\n                                        att.data = attachment;\n                                      });\n\n                                      return remoteDoc;\n                                    });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return PouchPromise.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.adapter === 'http' || db.adapter === 'https') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue, opts) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n  this.opts = opts || {};\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  if (this.opts.writeTargetCheckpoint) {\n    return updateCheckpoint(this.target, this.id, checkpoint,\n      session, this.returnValue);\n  } else {\n    return PouchPromise.resolve(true);\n  }\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  if (this.opts.writeSourceCheckpoint) {\n    var self = this;\n    return updateCheckpoint(this.src, this.id, checkpoint,\n      session, this.returnValue)\n      .catch(function (err) {\n        if (isForbiddenError(err)) {\n          self.opts.writeSourceCheckpoint = false;\n          return true;\n        }\n        throw err;\n      });\n  } else {\n    return PouchPromise.resolve(true);\n  }\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n\n  if (self.opts && self.opts.writeSourceCheckpoint && !self.opts.writeTargetCheckpoint) {\n    return self.src.get(self.id).then(function (sourceDoc) {\n      return sourceDoc.last_seq || LOWEST_SEQ;\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        throw err;\n      }\n      return LOWEST_SEQ;\n    });\n  }\n\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.opts && self.opts.writeTargetCheckpoint && !self.opts.writeSourceCheckpoint) {\n      return targetDoc.last_seq || LOWEST_SEQ;\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.opts.writeSourceCheckpoint = false;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n  var selector = '';\n\n  // possibility for checkpoints to be lost here as behaviour of\n  // JSON.stringify is not stable (see #6226)\n  /* istanbul ignore if */\n  if (opts.selector) {\n    selector = JSON.stringify(opts.selector);\n  }\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return PouchPromise.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds + selector;\n    return new PouchPromise(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var selector = opts.selector;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n  var seq_interval = opts.seq_interval;\n\n  result = result || {\n    ok: true,\n    start_time: new Date(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return PouchPromise.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n\n      var checkpointOpts = {};\n      if (opts.checkpoint === false) {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'source') {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'target') {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: true };\n      } else {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: true };\n      }\n\n      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n          var errorName = (error.name || '').toLowerCase();\n          if (errorName === 'unauthorized' || errorName === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      // Attach 'pending' property if server supports it (CouchDB 2.0+)\n      /* istanbul ignore if */\n      if (typeof currentBatch.pending === 'number') {\n        outResult.pending = currentBatch.pending;\n        delete currentBatch.pending;\n      }\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      // need to extend the error because Firefox considers \".result\" read-only\n      fatalError = createError(fatalError);\n      fatalError.result = result;\n\n      // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n      var errorName = (fatalError.name || '').toLowerCase();\n      if (errorName === 'unauthorized' || errorName === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    // Attach 'pending' property if server supports it (CouchDB 2.0+)\n    /* istanbul ignore if */\n    if (typeof pending === 'number') {\n      pendingBatch.pending = pending;\n    }\n\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq || lastSeq;\n    pendingBatch.changes.push(change);\n    processPendingBatch(batches.length === 0 && changesOpts.live);\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.last_seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          selector: selector,\n          return_docs: true // required so we know when we're done\n        };\n        if (seq_interval !== false) {\n          changesOpts.seq_interval = seq_interval || batch_size;\n        }\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\ninherits(Replication, events.EventEmitter);\nfunction Replication() {\n  events.EventEmitter.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new PouchPromise(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\ninherits(Sync, events.EventEmitter);\nfunction sync$1(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = PouchPromise.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync$1;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      if (typeof this.replicateMethods === 'undefined') {\n        this.replicateMethods = {\n          from: function (other, opts, callback) {\n            return self.constructor.replicate(other, self, opts, callback);\n          },\n          to: function (other, opts, callback) {\n            return self.constructor.replicate(self, other, opts, callback);\n          }\n        };\n      }\n      return this.replicateMethods;\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB.plugin(IDBPouch)\n  .plugin(WebSqlPouch$1)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\nmodule.exports = PouchDB;\n"],"sourceRoot":""}